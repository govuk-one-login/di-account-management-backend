name: Pre Merge Check

on:
  push:
    branches:
      - OLH-2303
  workflow_call:
    inputs:
      gitRef:
        required: false
        type: string
        default: ${{ github.ref }}
  pull_request:
  merge_group:
    types: [checks_requested]
  workflow_dispatch:

permissions: read-all

jobs:
  check-if-skipping-pre-merge:
    if: github.event_name != 'pull_request' || github.event.action == 'enqueued'
    runs-on: ubuntu-latest
    outputs:
      skip_found: ${{ steps.verify_skip_merge.outputs.skip_found }}
    defaults:
      run:
        shell: bash
        working-directory: ./pre-merge-integration-tests
    timeout-minutes: 60
    name: "Check if pre-merge step should be skipped "
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout repo
        uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3 # pin@v3
        with:
          fetch-depth: 0

      - name: Verify skipPreMerge is not in the last 3 commit message
        id: verify_skip_merge
        run: |
          WORD="skipPreMerge"
          echo "Checking the last 3 commit messages for the word '${WORD}':"
          SKIP_FOUND="false"
          for COMMIT_MSG in $(git log -3 --pretty=format:"%s"); do
            if [[ "$COMMIT_MSG" == *"$WORD"* ]]; then
              echo "Found '${WORD}' in commit: $COMMIT_MSG"
              SKIP_FOUND="true"
              break
            fi
          done
          if [ "$SKIP_FOUND" == "true" ]; then 
            echo "Skipping all steps because the commit message contains '${WORD}'."
            echo "skip_found=$SKIP_FOUND" >> $GITHUB_ENV
            echo "::set-output name=skip_found::$SKIP_FOUND"
            exit 0
          else
            echo "No commit message with '${WORD}' found. Proceeding with workflow."
          fi
  deploy-to-demo:
    if: ${{ needs.verify_skip_merge.outputs.skip_action == 'true' }}
    environment: Demo-test
    needs: check-if-skipping-pre-merge
    permissions:
      contents: read
      id-token: write
    name: "Deploy to Demo"
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout repo
        uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3 # pin@v3
        with:
          fetch-depth: 0

      - name: Verify merge queue source
        run: |
          echo "Commit message: ${{ github.event.head_commit.message }}"
          if [[ "${{ github.event.head_commit.message }}" != *"Merge pull request"* ]]; then
            echo "This was not a merge queue commit. Exiting."
            exit 0
          fi

      - name: Fill in backup wrapping key
        if: ${{ !contains(env.skip_found, 'true') }}
        run: |
          .github/workflows/find-and-replace-backup-wrapping-key.sh
        env:
          WRAPPING_KEY_ARN: ${{ secrets.WRAPPING_KEY_ARN }}

      - name: Install Node.js
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # pin@v3
        with:
          node-version-file: ".nvmrc"

      - name: Install ESbuild
        run: npm install -g esbuild@0.23

      - name: Set up Python 3.9
        uses: actions/setup-python@d27e3f3d7c64b4bbf8e4abfb9b63b83e846e0435 # pin@v4
        with:
          python-version: "3.9"

      - name: Set up SAM cli
        uses: aws-actions/setup-sam@b42eb7a54dac4039080975e32860b1b30935c9af # pin@v2

      - name: sam fix https://github.com/aws/aws-sam-cli/issues/4527
        run: $(dirname $(readlink $(which sam)))/pip install --force-reinstall "cryptography==38.0.4"

      - name: Set up AWS creds
        uses: aws-actions/configure-aws-credentials@e1e17a757e536f70e52b5a12b2e8d1d1c60e04ef # pin@v1-node16
        with:
          role-to-assume: ${{ secrets.DEMO_GH_ACTIONS_ROLE_ARN }}
          aws-region: eu-west-2

      - name: SAM validate
        run: sam validate

      - name: SAM build
        run: sam build --manifest package.json

      - name: Deploy SAM app
        uses: govuk-one-login/devplatform-upload-action@dc8158079d3976d613515180e543930cdbe73f5f # pin@v3
        with:
          artifact-bucket-name: ${{ secrets.DEMO_ARTIFACT_BUCKET_NAME }}
          signing-profile-name: ${{ secrets.DEMO_SIGNING_PROFILE_NAME }}
          template-file: .aws-sam/build/template.yaml

  check-stack-ready:
    if: ${{ needs.verify_skip_merge.outputs.skip_action == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./pre-merge-integration-tests
    timeout-minutes: 60
    name: "Check stack is ready for pre-merge test"
    permissions:
      id-token: write
      contents: read
    needs: deploy-to-demo
    steps:
      - name: Checkout repo
        uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3 # pin@v3
        with:
          fetch-depth: 0

      - name: Verify merge queue source
        run: |
          echo "Commit message: ${{ github.event.head_commit.message }}"
          if [[ "${{ github.event.head_commit.message }}" != *"Merge pull request"* ]]; then
            echo "This was not a merge queue commit. Exiting."
            exit 0
          fi

      - name: Poll for deployment finished
        uses: govuk-one-login/github-actions/sam/check-stack-updated@b00f9eeccebbc72083d8ffca4f0a2448fb14bda5
        with:
          stack-name: home-backend
          gh-polling-role: ${{ secrets.DEMO_TESTING_ROLE_ARN }}

  test:
    if: ${{ needs.verify_skip_merge.outputs.skip_action == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./pre-merge-integration-tests
    timeout-minutes: 60
    name: "Run Pre Merge Test"
    permissions:
      id-token: write
      contents: read
    needs: check-stack-ready
    steps:
      - name: Checkout repo
        uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3 # pin@v3
        with:
          fetch-depth: 0

      - name: Set up Python 3.9
        uses: actions/setup-python@d27e3f3d7c64b4bbf8e4abfb9b63b83e846e0435 # pin@v4
        with:
          python-version: "3.9"
          cache: "pip"
      - run: pip install -r $GITHUB_WORKSPACE/pre-merge-integration-tests/requirements.txt

      - name: Set up AWS creds
        uses: aws-actions/configure-aws-credentials@e1e17a757e536f70e52b5a12b2e8d1d1c60e04ef # pin@v1-node16
        with:
          role-to-assume: ${{ secrets.DEMO_TESTING_ROLE_ARN }}
          aws-region: eu-west-2

      - name: Run testing script
        run: SQS_QUEUE_ARN=${{ secrets.RawEventsQueue }} python3 $GITHUB_WORKSPACE/pre-merge-integration-tests/api_call.py
