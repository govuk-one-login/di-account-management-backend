name: SAM app test and build and deploy

on:
  workflow_dispatch:
  push:
    branches:
      - main

defaults:
  run:
    shell: bash

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout repo
        uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3 # pin@v3
        with:
          fetch-depth: 0

      - name: Install Node.js
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # pin@v3
        with:
          node-version-file: ".nvmrc"

      - name: Install ESbuild
        run: npm install -g esbuild@0.23

      - name: Test
        run: npm ci && npm test
        working-directory: ./

      - name: Set up Python 3.9
        uses: actions/setup-python@d27e3f3d7c64b4bbf8e4abfb9b63b83e846e0435 # pin@v4
        with:
          python-version: "3.9"

      - name: Set up SAM cli
        uses: aws-actions/setup-sam@b42eb7a54dac4039080975e32860b1b30935c9af # pin@v2

      - name: sam fix https://github.com/aws/aws-sam-cli/issues/4527
        run: $(dirname $(readlink $(which sam)))/pip install --force-reinstall "cryptography==38.0.4"

      - name: Set up AWS creds
        uses: aws-actions/configure-aws-credentials@e1e17a757e536f70e52b5a12b2e8d1d1c60e04ef # pin@v1-node16
        with:
          role-to-assume: ${{ secrets.GH_ACTIONS_ROLE_ARN }}
          aws-region: eu-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 #pin@v2.0.1

      - name: Build, tag, and push testing image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.POST_DEPLOY_TESTS_IMAGE_REPOSITORY }}
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f post-deploy-tests.Dockerfile . 
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: SAM validate
        run: sam validate

      - name: SAM build
        run: sam build --manifest package.json

      - name: Deploy SAM app
        uses: govuk-one-login/devplatform-upload-action@dc8158079d3976d613515180e543930cdbe73f5f # pin@v3
        with:
          artifact-bucket-name: ${{ secrets.ARTIFACT_BUCKET_NAME }}
          signing-profile-name: ${{ secrets.SIGNING_PROFILE_NAME }}
          template-file: .aws-sam/build/template.yaml

      - name: Notify on failure
        if: ${{ failure() && endsWith(github.ref, 'main') }}
        id: slack
        uses: slackapi/slack-github-action@485a9d42d3a73031f12ec201c457e2162c45d02d # pin@v2
        with:
          webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          webhook-type: webhook-trigger
          payload: |
            {
              "channel_id": "${{ secrets.NOTIFICATION_CHANNEL_ID }}",
              "github_repo": "${{ github.repository }}",
              "github_actor": "${{ github.actor }}",
              "github_workflow": "${{ github.workflow }}"
            }
