import { SupportedAlgorithmSuites, DecryptionRequest, EncryptionRequest, EncryptedDataKey, EncryptionContext } from '@aws-crypto/material-management';
export declare function buildCryptographicMaterialsCacheKeyHelpers<S extends SupportedAlgorithmSuites>(fromUtf8: (input: string) => Uint8Array, toUtf8: (input: Uint8Array) => string, sha512: (...data: (Uint8Array | string)[]) => Promise<Uint8Array>): CryptographicMaterialsCacheKeyHelpersInterface<S>;
export interface CryptographicMaterialsCacheKeyHelpersInterface<S extends SupportedAlgorithmSuites> {
    buildEncryptionMaterialCacheKey(partition: string, { suite, encryptionContext }: Omit<EncryptionRequest<S>, 'commitmentPolicy'>): Promise<string>;
    buildDecryptionMaterialCacheKey(partition: string, { suite, encryptedDataKeys, encryptionContext }: DecryptionRequest<S>): Promise<string>;
    encryptedDataKeysHash(encryptedDataKeys: ReadonlyArray<EncryptedDataKey>): Promise<Uint8Array[]>;
    encryptionContextHash(context: EncryptionContext): Promise<Uint8Array>;
}
//# sourceMappingURL=build_cryptographic_materials_cache_key_helpers.d.ts.map