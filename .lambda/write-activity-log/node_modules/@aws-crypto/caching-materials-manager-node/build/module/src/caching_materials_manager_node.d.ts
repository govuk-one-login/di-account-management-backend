import { CachingMaterialsManager, CryptographicMaterialsCache, CachingMaterialsManagerInput } from '@aws-crypto/cache-material';
import { NodeMaterialsManager, NodeAlgorithmSuite, NodeGetEncryptionMaterials, NodeGetDecryptMaterials } from '@aws-crypto/material-management-node';
export declare class NodeCachingMaterialsManager implements CachingMaterialsManager<NodeAlgorithmSuite> {
    readonly _cache: CryptographicMaterialsCache<NodeAlgorithmSuite>;
    readonly _backingMaterialsManager: NodeMaterialsManager;
    readonly _partition: string;
    readonly _maxBytesEncrypted: number;
    readonly _maxMessagesEncrypted: number;
    readonly _maxAge: number;
    constructor(input: CachingMaterialsManagerInput<NodeAlgorithmSuite>);
    getEncryptionMaterials: NodeGetEncryptionMaterials;
    decryptMaterials: NodeGetDecryptMaterials;
    _cacheEntryHasExceededLimits: import("@aws-crypto/cache-material").CacheEntryHasExceededLimits<NodeAlgorithmSuite>;
}
//# sourceMappingURL=caching_materials_manager_node.d.ts.map