/// <reference types="node" />
/**
 * Factory function to curry the hash algorithm
 *
 * @param algorithm [String] The name of the hash algorithm to use
 * @return [Function] The extract function decorated with expand and verify functions
 */
export declare function HKDF(algorithm?: string): HKDFOutput;
export interface Extract {
    (ikm: string | Uint8Array, salt?: string | Uint8Array | false): Buffer;
}
export interface Expand {
    (prk: Uint8Array, length: number, info?: Uint8Array): Buffer;
}
export interface HKDFOutput {
    (...args: Parameters<Extract>): (...args: Curry<Parameters<Expand>>) => Buffer;
    extract: Extract;
    expand: Expand;
}
type Curry<T extends any[]> = ((...args: T) => void) extends (head: any, ...tail: infer U) => any ? U : never;
export {};
//# sourceMappingURL=hkdf.d.ts.map