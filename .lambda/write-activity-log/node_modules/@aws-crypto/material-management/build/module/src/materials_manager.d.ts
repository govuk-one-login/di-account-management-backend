import { EncryptionRequest, DecryptionRequest } from '.';
import { EncryptionMaterial, DecryptionMaterial, SupportedAlgorithmSuites } from './types';
import { NodeAlgorithmSuite } from './node_algorithms';
import { WebCryptoAlgorithmSuite } from './web_crypto_algorithms';
export interface GetEncryptionMaterials<S extends SupportedAlgorithmSuites> {
    (request: EncryptionRequest<S>): Promise<EncryptionMaterial<S>>;
}
export interface GetDecryptMaterials<S extends SupportedAlgorithmSuites> {
    (request: DecryptionRequest<S>): Promise<DecryptionMaterial<S>>;
}
export interface MaterialsManager<S extends SupportedAlgorithmSuites> {
    getEncryptionMaterials: GetEncryptionMaterials<S>;
    decryptMaterials: GetDecryptMaterials<S>;
}
export interface NodeMaterialsManager extends MaterialsManager<NodeAlgorithmSuite> {
}
export interface WebCryptoMaterialsManager extends MaterialsManager<WebCryptoAlgorithmSuite> {
}
//# sourceMappingURL=materials_manager.d.ts.map