import { AlgorithmSuite, NodeECDHCurve, WebCryptoECDHCurve } from './algorithm_suites';
import { AwsEsdkJsCryptoKey } from './types';
export declare class SignatureKey {
    readonly privateKey: string | AwsEsdkJsCryptoKey;
    readonly compressPoint: Uint8Array;
    readonly signatureCurve: NodeECDHCurve | WebCryptoECDHCurve;
    constructor(privateKey: Uint8Array | AwsEsdkJsCryptoKey, compressPoint: Uint8Array, suite: AlgorithmSuite);
    static encodeCompressPoint(publicKeyBytes: Uint8Array, suite: AlgorithmSuite): Uint8Array;
}
export declare class VerificationKey {
    readonly publicKey: string | AwsEsdkJsCryptoKey;
    readonly signatureCurve: NodeECDHCurve | WebCryptoECDHCurve;
    constructor(publicKey: Uint8Array | AwsEsdkJsCryptoKey, suite: AlgorithmSuite);
    static decodeCompressPoint(compressPoint: Uint8Array, suite: AlgorithmSuite): Uint8Array;
}
//# sourceMappingURL=signature_key.d.ts.map