import { AlgorithmSuite, AlgorithmSuiteIdentifier, WebCryptoEncryption, WebCryptoHash, WebCryptoECDHCurve, AlgorithmSuiteTypeWebCrypto, MessageFormat, Commitment, AesGcm, AlgBasic, AlgKdf, AlgKdfSigned, AlgCommitted, AlgCommittedSigned } from './algorithm_suites';
interface WebCryptoAesGcm extends AesGcm {
    encryption: WebCryptoEncryption;
}
type WebCryptoAlgorithmSuiteValues = WebCryptoAesGcm & Partial<Omit<AlgBasic, keyof WebCryptoAesGcm>> & Partial<Omit<AlgKdf, keyof WebCryptoAesGcm>> & Partial<Omit<AlgKdfSigned, keyof WebCryptoAesGcm>> & Partial<Omit<AlgCommitted, keyof WebCryptoAesGcm>> & Partial<Omit<AlgCommittedSigned, keyof WebCryptoAesGcm>>;
export declare class WebCryptoAlgorithmSuite extends AlgorithmSuite implements WebCryptoAlgorithmSuiteValues {
    messageFormat: MessageFormat;
    encryption: WebCryptoEncryption;
    commitment: Commitment;
    kdfHash?: WebCryptoHash;
    signatureCurve?: WebCryptoECDHCurve;
    signatureHash?: WebCryptoHash;
    type: AlgorithmSuiteTypeWebCrypto;
    commitmentHash?: WebCryptoHash;
    constructor(id: AlgorithmSuiteIdentifier);
}
export {};
//# sourceMappingURL=web_crypto_algorithms.d.ts.map