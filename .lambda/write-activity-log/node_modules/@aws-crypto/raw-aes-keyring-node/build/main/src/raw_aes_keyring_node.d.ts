import { KeyringNode, NodeEncryptionMaterial, NodeDecryptionMaterial, EncryptedDataKey, NodeAlgorithmSuite } from '@aws-crypto/material-management-node';
import { WrappingSuiteIdentifier, WrapKey, UnwrapKey } from '@aws-crypto/raw-keyring';
export type RawAesKeyringNodeInput = {
    keyNamespace: string;
    keyName: string;
    unencryptedMasterKey: Uint8Array;
    wrappingSuite: WrappingSuiteIdentifier;
};
export declare class RawAesKeyringNode extends KeyringNode {
    keyNamespace: string;
    keyName: string;
    _wrapKey: WrapKey<NodeAlgorithmSuite>;
    _unwrapKey: UnwrapKey<NodeAlgorithmSuite>;
    constructor(input: RawAesKeyringNodeInput);
    _filter({ providerId, providerInfo }: EncryptedDataKey): boolean;
    _onEncrypt: (this: RawAesKeyringNode, material: NodeEncryptionMaterial) => Promise<NodeEncryptionMaterial>;
    _onDecrypt: (this: RawAesKeyringNode, material: NodeDecryptionMaterial, encryptedDataKeys: EncryptedDataKey[]) => Promise<NodeDecryptionMaterial>;
}
//# sourceMappingURL=raw_aes_keyring_node.d.ts.map