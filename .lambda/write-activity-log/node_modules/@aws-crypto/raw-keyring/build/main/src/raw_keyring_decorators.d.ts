import { EncryptionMaterial, DecryptionMaterial, SupportedAlgorithmSuites, EncryptedDataKey } from '@aws-crypto/material-management';
export interface RawKeyRing<S extends SupportedAlgorithmSuites> {
    keyNamespace: string;
    keyName: string;
    _wrapKey: WrapKey<S>;
    _unwrapKey: UnwrapKey<S>;
    _filter: FilterEncryptedDataKey;
}
export declare function _onEncrypt<S extends SupportedAlgorithmSuites, K extends RawKeyRing<S>>(randomBytes: (bytes: number) => Promise<Uint8Array>): (this: K, material: EncryptionMaterial<S>) => Promise<EncryptionMaterial<S>>;
export declare function _onDecrypt<S extends SupportedAlgorithmSuites, K extends RawKeyRing<S>>(): (this: K, material: DecryptionMaterial<S>, encryptedDataKeys: EncryptedDataKey[]) => Promise<DecryptionMaterial<S>>;
export interface WrapKey<S extends SupportedAlgorithmSuites> {
    (material: EncryptionMaterial<S>): Promise<EncryptionMaterial<S>>;
}
export interface UnwrapKey<S extends SupportedAlgorithmSuites> {
    (material: DecryptionMaterial<S>, edk: EncryptedDataKey): Promise<DecryptionMaterial<S>>;
}
export interface FilterEncryptedDataKey {
    (edk: EncryptedDataKey): boolean;
}
//# sourceMappingURL=raw_keyring_decorators.d.ts.map