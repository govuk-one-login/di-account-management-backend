import { IvLength, EncryptionContext, EncryptedDataKey, AlgorithmSuite } from '@aws-crypto/material-management';
import { MessageHeader } from './types';
export declare function serializeFactory(fromUtf8: (input: any) => Uint8Array): {
    frameIv: (ivLength: IvLength, sequenceNumber: number) => Uint8Array;
    nonFramedBodyIv: (ivLength: IvLength) => Uint8Array;
    headerAuthIv: (ivLength: IvLength) => Uint8Array;
    frameHeader: (sequenceNumber: number, iv: Uint8Array) => Uint8Array;
    finalFrameHeader: (sequenceNumber: number, iv: Uint8Array, contentLength: number) => Uint8Array;
    encodeEncryptionContext: (encryptionContext: EncryptionContext) => Uint8Array[];
    serializeEncryptionContext: (encryptionContext: EncryptionContext) => Uint8Array;
    serializeEncryptedDataKeys: (encryptedDataKeys: ReadonlyArray<EncryptedDataKey>) => Uint8Array;
    serializeEncryptedDataKey: (edk: EncryptedDataKey) => Uint8Array;
    serializeMessageHeader: (messageHeader: MessageHeader) => Uint8Array;
    buildMessageHeader: ({ encryptionContext, encryptedDataKeys, suite, messageId, frameLength, suiteData, }: {
        encryptionContext: Readonly<EncryptionContext>;
        encryptedDataKeys: ReadonlyArray<EncryptedDataKey>;
        suite: AlgorithmSuite;
        messageId: Uint8Array;
        frameLength: number;
        suiteData?: Uint8Array | undefined;
    }) => MessageHeader;
};
export declare function serializeMessageHeaderAuth({ headerIv, headerAuthTag, messageHeader, }: {
    headerIv: Uint8Array;
    headerAuthTag: Uint8Array;
    messageHeader: MessageHeader;
}): Uint8Array;
//# sourceMappingURL=serialize_factory.d.ts.map