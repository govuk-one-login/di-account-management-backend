"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.XksKeyAlreadyInUseException = exports.UnsupportedOperationException = exports.TagException = exports.MalformedPolicyDocumentException = exports.SigningAlgorithmSpec = exports.MultiRegionKeyType = exports.MacAlgorithmSpec = exports.KeyState = exports.KeyManagerType = exports.ExpirationModelType = exports.EncryptionAlgorithmSpec = exports.OriginType = exports.KeyUsageType = exports.KeySpec = exports.CustomerMasterKeySpec = exports.InvalidGrantTokenException = exports.DryRunOperationException = exports.DisabledException = exports.GrantOperation = exports.XksProxyVpcEndpointServiceNotFoundException = exports.XksProxyVpcEndpointServiceInvalidConfigurationException = exports.XksProxyVpcEndpointServiceInUseException = exports.XksProxyUriUnreachableException = exports.XksProxyUriInUseException = exports.XksProxyUriEndpointInUseException = exports.XksProxyInvalidResponseException = exports.XksProxyInvalidConfigurationException = exports.XksProxyIncorrectAuthenticationCredentialException = exports.IncorrectTrustAnchorException = exports.CustomKeyStoreNameInUseException = exports.XksProxyConnectivityType = exports.CustomKeyStoreType = exports.LimitExceededException = exports.InvalidAliasNameException = exports.ConnectionStateType = exports.ConnectionErrorCodeType = exports.CustomKeyStoreNotFoundException = exports.CustomKeyStoreInvalidStateException = exports.CloudHsmClusterNotRelatedException = exports.CloudHsmClusterNotFoundException = exports.CloudHsmClusterNotActiveException = exports.CloudHsmClusterInvalidConfigurationException = exports.CloudHsmClusterInUseException = exports.NotFoundException = exports.KMSInvalidStateException = exports.KMSInternalException = exports.InvalidArnException = exports.DependencyTimeoutException = exports.AlreadyExistsException = exports.AlgorithmSpec = void 0;
exports.VerifyMacRequestFilterSensitiveLog = exports.VerifyRequestFilterSensitiveLog = exports.UpdateCustomKeyStoreRequestFilterSensitiveLog = exports.SignRequestFilterSensitiveLog = exports.GetParametersForImportResponseFilterSensitiveLog = exports.GenerateRandomResponseFilterSensitiveLog = exports.GenerateMacRequestFilterSensitiveLog = exports.GenerateDataKeyPairResponseFilterSensitiveLog = exports.GenerateDataKeyResponseFilterSensitiveLog = exports.EncryptRequestFilterSensitiveLog = exports.DescribeCustomKeyStoresResponseFilterSensitiveLog = exports.DecryptResponseFilterSensitiveLog = exports.CustomKeyStoresListEntryFilterSensitiveLog = exports.XksProxyConfigurationTypeFilterSensitiveLog = exports.CreateCustomKeyStoreRequestFilterSensitiveLog = exports.XksProxyAuthenticationCredentialTypeFilterSensitiveLog = exports.MessageType = exports.KMSInvalidSignatureException = exports.KMSInvalidMacException = exports.InvalidGrantIdException = exports.InvalidImportTokenException = exports.IncorrectKeyMaterialException = exports.WrappingKeySpec = exports.ExpiredImportTokenException = exports.InvalidMarkerException = exports.KeyUnavailableException = exports.InvalidKeyUsageException = exports.InvalidCiphertextException = exports.IncorrectKeyException = exports.KeyEncryptionMechanism = exports.DataKeySpec = exports.DataKeyPairSpec = exports.CustomKeyStoreHasCMKsException = exports.XksKeyNotFoundException = exports.XksKeyInvalidConfigurationException = void 0;
const smithy_client_1 = require("@smithy/smithy-client");
const KMSServiceException_1 = require("./KMSServiceException");
exports.AlgorithmSpec = {
    RSAES_OAEP_SHA_1: "RSAES_OAEP_SHA_1",
    RSAES_OAEP_SHA_256: "RSAES_OAEP_SHA_256",
    RSAES_PKCS1_V1_5: "RSAES_PKCS1_V1_5",
    RSA_AES_KEY_WRAP_SHA_1: "RSA_AES_KEY_WRAP_SHA_1",
    RSA_AES_KEY_WRAP_SHA_256: "RSA_AES_KEY_WRAP_SHA_256",
};
class AlreadyExistsException extends KMSServiceException_1.KMSServiceException {
    constructor(opts) {
        super({
            name: "AlreadyExistsException",
            $fault: "client",
            ...opts,
        });
        this.name = "AlreadyExistsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, AlreadyExistsException.prototype);
    }
}
exports.AlreadyExistsException = AlreadyExistsException;
class DependencyTimeoutException extends KMSServiceException_1.KMSServiceException {
    constructor(opts) {
        super({
            name: "DependencyTimeoutException",
            $fault: "server",
            ...opts,
        });
        this.name = "DependencyTimeoutException";
        this.$fault = "server";
        Object.setPrototypeOf(this, DependencyTimeoutException.prototype);
    }
}
exports.DependencyTimeoutException = DependencyTimeoutException;
class InvalidArnException extends KMSServiceException_1.KMSServiceException {
    constructor(opts) {
        super({
            name: "InvalidArnException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidArnException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidArnException.prototype);
    }
}
exports.InvalidArnException = InvalidArnException;
class KMSInternalException extends KMSServiceException_1.KMSServiceException {
    constructor(opts) {
        super({
            name: "KMSInternalException",
            $fault: "server",
            ...opts,
        });
        this.name = "KMSInternalException";
        this.$fault = "server";
        Object.setPrototypeOf(this, KMSInternalException.prototype);
    }
}
exports.KMSInternalException = KMSInternalException;
class KMSInvalidStateException extends KMSServiceException_1.KMSServiceException {
    constructor(opts) {
        super({
            name: "KMSInvalidStateException",
            $fault: "client",
            ...opts,
        });
        this.name = "KMSInvalidStateException";
        this.$fault = "client";
        Object.setPrototypeOf(this, KMSInvalidStateException.prototype);
    }
}
exports.KMSInvalidStateException = KMSInvalidStateException;
class NotFoundException extends KMSServiceException_1.KMSServiceException {
    constructor(opts) {
        super({
            name: "NotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "NotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, NotFoundException.prototype);
    }
}
exports.NotFoundException = NotFoundException;
class CloudHsmClusterInUseException extends KMSServiceException_1.KMSServiceException {
    constructor(opts) {
        super({
            name: "CloudHsmClusterInUseException",
            $fault: "client",
            ...opts,
        });
        this.name = "CloudHsmClusterInUseException";
        this.$fault = "client";
        Object.setPrototypeOf(this, CloudHsmClusterInUseException.prototype);
    }
}
exports.CloudHsmClusterInUseException = CloudHsmClusterInUseException;
class CloudHsmClusterInvalidConfigurationException extends KMSServiceException_1.KMSServiceException {
    constructor(opts) {
        super({
            name: "CloudHsmClusterInvalidConfigurationException",
            $fault: "client",
            ...opts,
        });
        this.name = "CloudHsmClusterInvalidConfigurationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, CloudHsmClusterInvalidConfigurationException.prototype);
    }
}
exports.CloudHsmClusterInvalidConfigurationException = CloudHsmClusterInvalidConfigurationException;
class CloudHsmClusterNotActiveException extends KMSServiceException_1.KMSServiceException {
    constructor(opts) {
        super({
            name: "CloudHsmClusterNotActiveException",
            $fault: "client",
            ...opts,
        });
        this.name = "CloudHsmClusterNotActiveException";
        this.$fault = "client";
        Object.setPrototypeOf(this, CloudHsmClusterNotActiveException.prototype);
    }
}
exports.CloudHsmClusterNotActiveException = CloudHsmClusterNotActiveException;
class CloudHsmClusterNotFoundException extends KMSServiceException_1.KMSServiceException {
    constructor(opts) {
        super({
            name: "CloudHsmClusterNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "CloudHsmClusterNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, CloudHsmClusterNotFoundException.prototype);
    }
}
exports.CloudHsmClusterNotFoundException = CloudHsmClusterNotFoundException;
class CloudHsmClusterNotRelatedException extends KMSServiceException_1.KMSServiceException {
    constructor(opts) {
        super({
            name: "CloudHsmClusterNotRelatedException",
            $fault: "client",
            ...opts,
        });
        this.name = "CloudHsmClusterNotRelatedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, CloudHsmClusterNotRelatedException.prototype);
    }
}
exports.CloudHsmClusterNotRelatedException = CloudHsmClusterNotRelatedException;
class CustomKeyStoreInvalidStateException extends KMSServiceException_1.KMSServiceException {
    constructor(opts) {
        super({
            name: "CustomKeyStoreInvalidStateException",
            $fault: "client",
            ...opts,
        });
        this.name = "CustomKeyStoreInvalidStateException";
        this.$fault = "client";
        Object.setPrototypeOf(this, CustomKeyStoreInvalidStateException.prototype);
    }
}
exports.CustomKeyStoreInvalidStateException = CustomKeyStoreInvalidStateException;
class CustomKeyStoreNotFoundException extends KMSServiceException_1.KMSServiceException {
    constructor(opts) {
        super({
            name: "CustomKeyStoreNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "CustomKeyStoreNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, CustomKeyStoreNotFoundException.prototype);
    }
}
exports.CustomKeyStoreNotFoundException = CustomKeyStoreNotFoundException;
exports.ConnectionErrorCodeType = {
    CLUSTER_NOT_FOUND: "CLUSTER_NOT_FOUND",
    INSUFFICIENT_CLOUDHSM_HSMS: "INSUFFICIENT_CLOUDHSM_HSMS",
    INSUFFICIENT_FREE_ADDRESSES_IN_SUBNET: "INSUFFICIENT_FREE_ADDRESSES_IN_SUBNET",
    INTERNAL_ERROR: "INTERNAL_ERROR",
    INVALID_CREDENTIALS: "INVALID_CREDENTIALS",
    NETWORK_ERRORS: "NETWORK_ERRORS",
    SUBNET_NOT_FOUND: "SUBNET_NOT_FOUND",
    USER_LOCKED_OUT: "USER_LOCKED_OUT",
    USER_LOGGED_IN: "USER_LOGGED_IN",
    USER_NOT_FOUND: "USER_NOT_FOUND",
    XKS_PROXY_ACCESS_DENIED: "XKS_PROXY_ACCESS_DENIED",
    XKS_PROXY_INVALID_CONFIGURATION: "XKS_PROXY_INVALID_CONFIGURATION",
    XKS_PROXY_INVALID_RESPONSE: "XKS_PROXY_INVALID_RESPONSE",
    XKS_PROXY_INVALID_TLS_CONFIGURATION: "XKS_PROXY_INVALID_TLS_CONFIGURATION",
    XKS_PROXY_NOT_REACHABLE: "XKS_PROXY_NOT_REACHABLE",
    XKS_PROXY_TIMED_OUT: "XKS_PROXY_TIMED_OUT",
    XKS_VPC_ENDPOINT_SERVICE_INVALID_CONFIGURATION: "XKS_VPC_ENDPOINT_SERVICE_INVALID_CONFIGURATION",
    XKS_VPC_ENDPOINT_SERVICE_NOT_FOUND: "XKS_VPC_ENDPOINT_SERVICE_NOT_FOUND",
};
exports.ConnectionStateType = {
    CONNECTED: "CONNECTED",
    CONNECTING: "CONNECTING",
    DISCONNECTED: "DISCONNECTED",
    DISCONNECTING: "DISCONNECTING",
    FAILED: "FAILED",
};
class InvalidAliasNameException extends KMSServiceException_1.KMSServiceException {
    constructor(opts) {
        super({
            name: "InvalidAliasNameException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidAliasNameException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidAliasNameException.prototype);
    }
}
exports.InvalidAliasNameException = InvalidAliasNameException;
class LimitExceededException extends KMSServiceException_1.KMSServiceException {
    constructor(opts) {
        super({
            name: "LimitExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "LimitExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, LimitExceededException.prototype);
    }
}
exports.LimitExceededException = LimitExceededException;
exports.CustomKeyStoreType = {
    AWS_CLOUDHSM: "AWS_CLOUDHSM",
    EXTERNAL_KEY_STORE: "EXTERNAL_KEY_STORE",
};
exports.XksProxyConnectivityType = {
    PUBLIC_ENDPOINT: "PUBLIC_ENDPOINT",
    VPC_ENDPOINT_SERVICE: "VPC_ENDPOINT_SERVICE",
};
class CustomKeyStoreNameInUseException extends KMSServiceException_1.KMSServiceException {
    constructor(opts) {
        super({
            name: "CustomKeyStoreNameInUseException",
            $fault: "client",
            ...opts,
        });
        this.name = "CustomKeyStoreNameInUseException";
        this.$fault = "client";
        Object.setPrototypeOf(this, CustomKeyStoreNameInUseException.prototype);
    }
}
exports.CustomKeyStoreNameInUseException = CustomKeyStoreNameInUseException;
class IncorrectTrustAnchorException extends KMSServiceException_1.KMSServiceException {
    constructor(opts) {
        super({
            name: "IncorrectTrustAnchorException",
            $fault: "client",
            ...opts,
        });
        this.name = "IncorrectTrustAnchorException";
        this.$fault = "client";
        Object.setPrototypeOf(this, IncorrectTrustAnchorException.prototype);
    }
}
exports.IncorrectTrustAnchorException = IncorrectTrustAnchorException;
class XksProxyIncorrectAuthenticationCredentialException extends KMSServiceException_1.KMSServiceException {
    constructor(opts) {
        super({
            name: "XksProxyIncorrectAuthenticationCredentialException",
            $fault: "client",
            ...opts,
        });
        this.name = "XksProxyIncorrectAuthenticationCredentialException";
        this.$fault = "client";
        Object.setPrototypeOf(this, XksProxyIncorrectAuthenticationCredentialException.prototype);
    }
}
exports.XksProxyIncorrectAuthenticationCredentialException = XksProxyIncorrectAuthenticationCredentialException;
class XksProxyInvalidConfigurationException extends KMSServiceException_1.KMSServiceException {
    constructor(opts) {
        super({
            name: "XksProxyInvalidConfigurationException",
            $fault: "client",
            ...opts,
        });
        this.name = "XksProxyInvalidConfigurationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, XksProxyInvalidConfigurationException.prototype);
    }
}
exports.XksProxyInvalidConfigurationException = XksProxyInvalidConfigurationException;
class XksProxyInvalidResponseException extends KMSServiceException_1.KMSServiceException {
    constructor(opts) {
        super({
            name: "XksProxyInvalidResponseException",
            $fault: "client",
            ...opts,
        });
        this.name = "XksProxyInvalidResponseException";
        this.$fault = "client";
        Object.setPrototypeOf(this, XksProxyInvalidResponseException.prototype);
    }
}
exports.XksProxyInvalidResponseException = XksProxyInvalidResponseException;
class XksProxyUriEndpointInUseException extends KMSServiceException_1.KMSServiceException {
    constructor(opts) {
        super({
            name: "XksProxyUriEndpointInUseException",
            $fault: "client",
            ...opts,
        });
        this.name = "XksProxyUriEndpointInUseException";
        this.$fault = "client";
        Object.setPrototypeOf(this, XksProxyUriEndpointInUseException.prototype);
    }
}
exports.XksProxyUriEndpointInUseException = XksProxyUriEndpointInUseException;
class XksProxyUriInUseException extends KMSServiceException_1.KMSServiceException {
    constructor(opts) {
        super({
            name: "XksProxyUriInUseException",
            $fault: "client",
            ...opts,
        });
        this.name = "XksProxyUriInUseException";
        this.$fault = "client";
        Object.setPrototypeOf(this, XksProxyUriInUseException.prototype);
    }
}
exports.XksProxyUriInUseException = XksProxyUriInUseException;
class XksProxyUriUnreachableException extends KMSServiceException_1.KMSServiceException {
    constructor(opts) {
        super({
            name: "XksProxyUriUnreachableException",
            $fault: "client",
            ...opts,
        });
        this.name = "XksProxyUriUnreachableException";
        this.$fault = "client";
        Object.setPrototypeOf(this, XksProxyUriUnreachableException.prototype);
    }
}
exports.XksProxyUriUnreachableException = XksProxyUriUnreachableException;
class XksProxyVpcEndpointServiceInUseException extends KMSServiceException_1.KMSServiceException {
    constructor(opts) {
        super({
            name: "XksProxyVpcEndpointServiceInUseException",
            $fault: "client",
            ...opts,
        });
        this.name = "XksProxyVpcEndpointServiceInUseException";
        this.$fault = "client";
        Object.setPrototypeOf(this, XksProxyVpcEndpointServiceInUseException.prototype);
    }
}
exports.XksProxyVpcEndpointServiceInUseException = XksProxyVpcEndpointServiceInUseException;
class XksProxyVpcEndpointServiceInvalidConfigurationException extends KMSServiceException_1.KMSServiceException {
    constructor(opts) {
        super({
            name: "XksProxyVpcEndpointServiceInvalidConfigurationException",
            $fault: "client",
            ...opts,
        });
        this.name = "XksProxyVpcEndpointServiceInvalidConfigurationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, XksProxyVpcEndpointServiceInvalidConfigurationException.prototype);
    }
}
exports.XksProxyVpcEndpointServiceInvalidConfigurationException = XksProxyVpcEndpointServiceInvalidConfigurationException;
class XksProxyVpcEndpointServiceNotFoundException extends KMSServiceException_1.KMSServiceException {
    constructor(opts) {
        super({
            name: "XksProxyVpcEndpointServiceNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "XksProxyVpcEndpointServiceNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, XksProxyVpcEndpointServiceNotFoundException.prototype);
    }
}
exports.XksProxyVpcEndpointServiceNotFoundException = XksProxyVpcEndpointServiceNotFoundException;
exports.GrantOperation = {
    CreateGrant: "CreateGrant",
    Decrypt: "Decrypt",
    DescribeKey: "DescribeKey",
    Encrypt: "Encrypt",
    GenerateDataKey: "GenerateDataKey",
    GenerateDataKeyPair: "GenerateDataKeyPair",
    GenerateDataKeyPairWithoutPlaintext: "GenerateDataKeyPairWithoutPlaintext",
    GenerateDataKeyWithoutPlaintext: "GenerateDataKeyWithoutPlaintext",
    GenerateMac: "GenerateMac",
    GetPublicKey: "GetPublicKey",
    ReEncryptFrom: "ReEncryptFrom",
    ReEncryptTo: "ReEncryptTo",
    RetireGrant: "RetireGrant",
    Sign: "Sign",
    Verify: "Verify",
    VerifyMac: "VerifyMac",
};
class DisabledException extends KMSServiceException_1.KMSServiceException {
    constructor(opts) {
        super({
            name: "DisabledException",
            $fault: "client",
            ...opts,
        });
        this.name = "DisabledException";
        this.$fault = "client";
        Object.setPrototypeOf(this, DisabledException.prototype);
    }
}
exports.DisabledException = DisabledException;
class DryRunOperationException extends KMSServiceException_1.KMSServiceException {
    constructor(opts) {
        super({
            name: "DryRunOperationException",
            $fault: "client",
            ...opts,
        });
        this.name = "DryRunOperationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, DryRunOperationException.prototype);
    }
}
exports.DryRunOperationException = DryRunOperationException;
class InvalidGrantTokenException extends KMSServiceException_1.KMSServiceException {
    constructor(opts) {
        super({
            name: "InvalidGrantTokenException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidGrantTokenException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidGrantTokenException.prototype);
    }
}
exports.InvalidGrantTokenException = InvalidGrantTokenException;
exports.CustomerMasterKeySpec = {
    ECC_NIST_P256: "ECC_NIST_P256",
    ECC_NIST_P384: "ECC_NIST_P384",
    ECC_NIST_P521: "ECC_NIST_P521",
    ECC_SECG_P256K1: "ECC_SECG_P256K1",
    HMAC_224: "HMAC_224",
    HMAC_256: "HMAC_256",
    HMAC_384: "HMAC_384",
    HMAC_512: "HMAC_512",
    RSA_2048: "RSA_2048",
    RSA_3072: "RSA_3072",
    RSA_4096: "RSA_4096",
    SM2: "SM2",
    SYMMETRIC_DEFAULT: "SYMMETRIC_DEFAULT",
};
exports.KeySpec = {
    ECC_NIST_P256: "ECC_NIST_P256",
    ECC_NIST_P384: "ECC_NIST_P384",
    ECC_NIST_P521: "ECC_NIST_P521",
    ECC_SECG_P256K1: "ECC_SECG_P256K1",
    HMAC_224: "HMAC_224",
    HMAC_256: "HMAC_256",
    HMAC_384: "HMAC_384",
    HMAC_512: "HMAC_512",
    RSA_2048: "RSA_2048",
    RSA_3072: "RSA_3072",
    RSA_4096: "RSA_4096",
    SM2: "SM2",
    SYMMETRIC_DEFAULT: "SYMMETRIC_DEFAULT",
};
exports.KeyUsageType = {
    ENCRYPT_DECRYPT: "ENCRYPT_DECRYPT",
    GENERATE_VERIFY_MAC: "GENERATE_VERIFY_MAC",
    SIGN_VERIFY: "SIGN_VERIFY",
};
exports.OriginType = {
    AWS_CLOUDHSM: "AWS_CLOUDHSM",
    AWS_KMS: "AWS_KMS",
    EXTERNAL: "EXTERNAL",
    EXTERNAL_KEY_STORE: "EXTERNAL_KEY_STORE",
};
exports.EncryptionAlgorithmSpec = {
    RSAES_OAEP_SHA_1: "RSAES_OAEP_SHA_1",
    RSAES_OAEP_SHA_256: "RSAES_OAEP_SHA_256",
    SM2PKE: "SM2PKE",
    SYMMETRIC_DEFAULT: "SYMMETRIC_DEFAULT",
};
exports.ExpirationModelType = {
    KEY_MATERIAL_DOES_NOT_EXPIRE: "KEY_MATERIAL_DOES_NOT_EXPIRE",
    KEY_MATERIAL_EXPIRES: "KEY_MATERIAL_EXPIRES",
};
exports.KeyManagerType = {
    AWS: "AWS",
    CUSTOMER: "CUSTOMER",
};
exports.KeyState = {
    Creating: "Creating",
    Disabled: "Disabled",
    Enabled: "Enabled",
    PendingDeletion: "PendingDeletion",
    PendingImport: "PendingImport",
    PendingReplicaDeletion: "PendingReplicaDeletion",
    Unavailable: "Unavailable",
    Updating: "Updating",
};
exports.MacAlgorithmSpec = {
    HMAC_SHA_224: "HMAC_SHA_224",
    HMAC_SHA_256: "HMAC_SHA_256",
    HMAC_SHA_384: "HMAC_SHA_384",
    HMAC_SHA_512: "HMAC_SHA_512",
};
exports.MultiRegionKeyType = {
    PRIMARY: "PRIMARY",
    REPLICA: "REPLICA",
};
exports.SigningAlgorithmSpec = {
    ECDSA_SHA_256: "ECDSA_SHA_256",
    ECDSA_SHA_384: "ECDSA_SHA_384",
    ECDSA_SHA_512: "ECDSA_SHA_512",
    RSASSA_PKCS1_V1_5_SHA_256: "RSASSA_PKCS1_V1_5_SHA_256",
    RSASSA_PKCS1_V1_5_SHA_384: "RSASSA_PKCS1_V1_5_SHA_384",
    RSASSA_PKCS1_V1_5_SHA_512: "RSASSA_PKCS1_V1_5_SHA_512",
    RSASSA_PSS_SHA_256: "RSASSA_PSS_SHA_256",
    RSASSA_PSS_SHA_384: "RSASSA_PSS_SHA_384",
    RSASSA_PSS_SHA_512: "RSASSA_PSS_SHA_512",
    SM2DSA: "SM2DSA",
};
class MalformedPolicyDocumentException extends KMSServiceException_1.KMSServiceException {
    constructor(opts) {
        super({
            name: "MalformedPolicyDocumentException",
            $fault: "client",
            ...opts,
        });
        this.name = "MalformedPolicyDocumentException";
        this.$fault = "client";
        Object.setPrototypeOf(this, MalformedPolicyDocumentException.prototype);
    }
}
exports.MalformedPolicyDocumentException = MalformedPolicyDocumentException;
class TagException extends KMSServiceException_1.KMSServiceException {
    constructor(opts) {
        super({
            name: "TagException",
            $fault: "client",
            ...opts,
        });
        this.name = "TagException";
        this.$fault = "client";
        Object.setPrototypeOf(this, TagException.prototype);
    }
}
exports.TagException = TagException;
class UnsupportedOperationException extends KMSServiceException_1.KMSServiceException {
    constructor(opts) {
        super({
            name: "UnsupportedOperationException",
            $fault: "client",
            ...opts,
        });
        this.name = "UnsupportedOperationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, UnsupportedOperationException.prototype);
    }
}
exports.UnsupportedOperationException = UnsupportedOperationException;
class XksKeyAlreadyInUseException extends KMSServiceException_1.KMSServiceException {
    constructor(opts) {
        super({
            name: "XksKeyAlreadyInUseException",
            $fault: "client",
            ...opts,
        });
        this.name = "XksKeyAlreadyInUseException";
        this.$fault = "client";
        Object.setPrototypeOf(this, XksKeyAlreadyInUseException.prototype);
    }
}
exports.XksKeyAlreadyInUseException = XksKeyAlreadyInUseException;
class XksKeyInvalidConfigurationException extends KMSServiceException_1.KMSServiceException {
    constructor(opts) {
        super({
            name: "XksKeyInvalidConfigurationException",
            $fault: "client",
            ...opts,
        });
        this.name = "XksKeyInvalidConfigurationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, XksKeyInvalidConfigurationException.prototype);
    }
}
exports.XksKeyInvalidConfigurationException = XksKeyInvalidConfigurationException;
class XksKeyNotFoundException extends KMSServiceException_1.KMSServiceException {
    constructor(opts) {
        super({
            name: "XksKeyNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "XksKeyNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, XksKeyNotFoundException.prototype);
    }
}
exports.XksKeyNotFoundException = XksKeyNotFoundException;
class CustomKeyStoreHasCMKsException extends KMSServiceException_1.KMSServiceException {
    constructor(opts) {
        super({
            name: "CustomKeyStoreHasCMKsException",
            $fault: "client",
            ...opts,
        });
        this.name = "CustomKeyStoreHasCMKsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, CustomKeyStoreHasCMKsException.prototype);
    }
}
exports.CustomKeyStoreHasCMKsException = CustomKeyStoreHasCMKsException;
exports.DataKeyPairSpec = {
    ECC_NIST_P256: "ECC_NIST_P256",
    ECC_NIST_P384: "ECC_NIST_P384",
    ECC_NIST_P521: "ECC_NIST_P521",
    ECC_SECG_P256K1: "ECC_SECG_P256K1",
    RSA_2048: "RSA_2048",
    RSA_3072: "RSA_3072",
    RSA_4096: "RSA_4096",
    SM2: "SM2",
};
exports.DataKeySpec = {
    AES_128: "AES_128",
    AES_256: "AES_256",
};
exports.KeyEncryptionMechanism = {
    RSAES_OAEP_SHA_256: "RSAES_OAEP_SHA_256",
};
class IncorrectKeyException extends KMSServiceException_1.KMSServiceException {
    constructor(opts) {
        super({
            name: "IncorrectKeyException",
            $fault: "client",
            ...opts,
        });
        this.name = "IncorrectKeyException";
        this.$fault = "client";
        Object.setPrototypeOf(this, IncorrectKeyException.prototype);
    }
}
exports.IncorrectKeyException = IncorrectKeyException;
class InvalidCiphertextException extends KMSServiceException_1.KMSServiceException {
    constructor(opts) {
        super({
            name: "InvalidCiphertextException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidCiphertextException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidCiphertextException.prototype);
    }
}
exports.InvalidCiphertextException = InvalidCiphertextException;
class InvalidKeyUsageException extends KMSServiceException_1.KMSServiceException {
    constructor(opts) {
        super({
            name: "InvalidKeyUsageException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidKeyUsageException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidKeyUsageException.prototype);
    }
}
exports.InvalidKeyUsageException = InvalidKeyUsageException;
class KeyUnavailableException extends KMSServiceException_1.KMSServiceException {
    constructor(opts) {
        super({
            name: "KeyUnavailableException",
            $fault: "server",
            ...opts,
        });
        this.name = "KeyUnavailableException";
        this.$fault = "server";
        Object.setPrototypeOf(this, KeyUnavailableException.prototype);
    }
}
exports.KeyUnavailableException = KeyUnavailableException;
class InvalidMarkerException extends KMSServiceException_1.KMSServiceException {
    constructor(opts) {
        super({
            name: "InvalidMarkerException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidMarkerException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidMarkerException.prototype);
    }
}
exports.InvalidMarkerException = InvalidMarkerException;
class ExpiredImportTokenException extends KMSServiceException_1.KMSServiceException {
    constructor(opts) {
        super({
            name: "ExpiredImportTokenException",
            $fault: "client",
            ...opts,
        });
        this.name = "ExpiredImportTokenException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ExpiredImportTokenException.prototype);
    }
}
exports.ExpiredImportTokenException = ExpiredImportTokenException;
exports.WrappingKeySpec = {
    RSA_2048: "RSA_2048",
    RSA_3072: "RSA_3072",
    RSA_4096: "RSA_4096",
};
class IncorrectKeyMaterialException extends KMSServiceException_1.KMSServiceException {
    constructor(opts) {
        super({
            name: "IncorrectKeyMaterialException",
            $fault: "client",
            ...opts,
        });
        this.name = "IncorrectKeyMaterialException";
        this.$fault = "client";
        Object.setPrototypeOf(this, IncorrectKeyMaterialException.prototype);
    }
}
exports.IncorrectKeyMaterialException = IncorrectKeyMaterialException;
class InvalidImportTokenException extends KMSServiceException_1.KMSServiceException {
    constructor(opts) {
        super({
            name: "InvalidImportTokenException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidImportTokenException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidImportTokenException.prototype);
    }
}
exports.InvalidImportTokenException = InvalidImportTokenException;
class InvalidGrantIdException extends KMSServiceException_1.KMSServiceException {
    constructor(opts) {
        super({
            name: "InvalidGrantIdException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidGrantIdException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidGrantIdException.prototype);
    }
}
exports.InvalidGrantIdException = InvalidGrantIdException;
class KMSInvalidMacException extends KMSServiceException_1.KMSServiceException {
    constructor(opts) {
        super({
            name: "KMSInvalidMacException",
            $fault: "client",
            ...opts,
        });
        this.name = "KMSInvalidMacException";
        this.$fault = "client";
        Object.setPrototypeOf(this, KMSInvalidMacException.prototype);
    }
}
exports.KMSInvalidMacException = KMSInvalidMacException;
class KMSInvalidSignatureException extends KMSServiceException_1.KMSServiceException {
    constructor(opts) {
        super({
            name: "KMSInvalidSignatureException",
            $fault: "client",
            ...opts,
        });
        this.name = "KMSInvalidSignatureException";
        this.$fault = "client";
        Object.setPrototypeOf(this, KMSInvalidSignatureException.prototype);
    }
}
exports.KMSInvalidSignatureException = KMSInvalidSignatureException;
exports.MessageType = {
    DIGEST: "DIGEST",
    RAW: "RAW",
};
const XksProxyAuthenticationCredentialTypeFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.AccessKeyId && { AccessKeyId: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.RawSecretAccessKey && { RawSecretAccessKey: smithy_client_1.SENSITIVE_STRING }),
});
exports.XksProxyAuthenticationCredentialTypeFilterSensitiveLog = XksProxyAuthenticationCredentialTypeFilterSensitiveLog;
const CreateCustomKeyStoreRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.KeyStorePassword && { KeyStorePassword: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.XksProxyAuthenticationCredential && {
        XksProxyAuthenticationCredential: (0, exports.XksProxyAuthenticationCredentialTypeFilterSensitiveLog)(obj.XksProxyAuthenticationCredential),
    }),
});
exports.CreateCustomKeyStoreRequestFilterSensitiveLog = CreateCustomKeyStoreRequestFilterSensitiveLog;
const XksProxyConfigurationTypeFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.AccessKeyId && { AccessKeyId: smithy_client_1.SENSITIVE_STRING }),
});
exports.XksProxyConfigurationTypeFilterSensitiveLog = XksProxyConfigurationTypeFilterSensitiveLog;
const CustomKeyStoresListEntryFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.XksProxyConfiguration && {
        XksProxyConfiguration: (0, exports.XksProxyConfigurationTypeFilterSensitiveLog)(obj.XksProxyConfiguration),
    }),
});
exports.CustomKeyStoresListEntryFilterSensitiveLog = CustomKeyStoresListEntryFilterSensitiveLog;
const DecryptResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Plaintext && { Plaintext: smithy_client_1.SENSITIVE_STRING }),
});
exports.DecryptResponseFilterSensitiveLog = DecryptResponseFilterSensitiveLog;
const DescribeCustomKeyStoresResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.CustomKeyStores && {
        CustomKeyStores: obj.CustomKeyStores.map((item) => (0, exports.CustomKeyStoresListEntryFilterSensitiveLog)(item)),
    }),
});
exports.DescribeCustomKeyStoresResponseFilterSensitiveLog = DescribeCustomKeyStoresResponseFilterSensitiveLog;
const EncryptRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Plaintext && { Plaintext: smithy_client_1.SENSITIVE_STRING }),
});
exports.EncryptRequestFilterSensitiveLog = EncryptRequestFilterSensitiveLog;
const GenerateDataKeyResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Plaintext && { Plaintext: smithy_client_1.SENSITIVE_STRING }),
});
exports.GenerateDataKeyResponseFilterSensitiveLog = GenerateDataKeyResponseFilterSensitiveLog;
const GenerateDataKeyPairResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.PrivateKeyPlaintext && { PrivateKeyPlaintext: smithy_client_1.SENSITIVE_STRING }),
});
exports.GenerateDataKeyPairResponseFilterSensitiveLog = GenerateDataKeyPairResponseFilterSensitiveLog;
const GenerateMacRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Message && { Message: smithy_client_1.SENSITIVE_STRING }),
});
exports.GenerateMacRequestFilterSensitiveLog = GenerateMacRequestFilterSensitiveLog;
const GenerateRandomResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Plaintext && { Plaintext: smithy_client_1.SENSITIVE_STRING }),
});
exports.GenerateRandomResponseFilterSensitiveLog = GenerateRandomResponseFilterSensitiveLog;
const GetParametersForImportResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.PublicKey && { PublicKey: smithy_client_1.SENSITIVE_STRING }),
});
exports.GetParametersForImportResponseFilterSensitiveLog = GetParametersForImportResponseFilterSensitiveLog;
const SignRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Message && { Message: smithy_client_1.SENSITIVE_STRING }),
});
exports.SignRequestFilterSensitiveLog = SignRequestFilterSensitiveLog;
const UpdateCustomKeyStoreRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.KeyStorePassword && { KeyStorePassword: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.XksProxyAuthenticationCredential && {
        XksProxyAuthenticationCredential: (0, exports.XksProxyAuthenticationCredentialTypeFilterSensitiveLog)(obj.XksProxyAuthenticationCredential),
    }),
});
exports.UpdateCustomKeyStoreRequestFilterSensitiveLog = UpdateCustomKeyStoreRequestFilterSensitiveLog;
const VerifyRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Message && { Message: smithy_client_1.SENSITIVE_STRING }),
});
exports.VerifyRequestFilterSensitiveLog = VerifyRequestFilterSensitiveLog;
const VerifyMacRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Message && { Message: smithy_client_1.SENSITIVE_STRING }),
});
exports.VerifyMacRequestFilterSensitiveLog = VerifyMacRequestFilterSensitiveLog;
