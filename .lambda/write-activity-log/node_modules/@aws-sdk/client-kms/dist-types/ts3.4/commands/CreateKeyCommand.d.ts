import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  KMSClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../KMSClient";
import { CreateKeyRequest, CreateKeyResponse } from "../models/models_0";
export { __MetadataBearer, $Command };
export interface CreateKeyCommandInput extends CreateKeyRequest {}
export interface CreateKeyCommandOutput
  extends CreateKeyResponse,
    __MetadataBearer {}
export declare class CreateKeyCommand extends $Command<
  CreateKeyCommandInput,
  CreateKeyCommandOutput,
  KMSClientResolvedConfig
> {
  readonly input: CreateKeyCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: CreateKeyCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: KMSClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<CreateKeyCommandInput, CreateKeyCommandOutput>;
  private serialize;
  private deserialize;
}
