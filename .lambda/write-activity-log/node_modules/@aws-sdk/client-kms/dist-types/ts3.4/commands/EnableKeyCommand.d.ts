import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  KMSClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../KMSClient";
import { EnableKeyRequest } from "../models/models_0";
export { __MetadataBearer, $Command };
export interface EnableKeyCommandInput extends EnableKeyRequest {}
export interface EnableKeyCommandOutput extends __MetadataBearer {}
export declare class EnableKeyCommand extends $Command<
  EnableKeyCommandInput,
  EnableKeyCommandOutput,
  KMSClientResolvedConfig
> {
  readonly input: EnableKeyCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: EnableKeyCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: KMSClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<EnableKeyCommandInput, EnableKeyCommandOutput>;
  private serialize;
  private deserialize;
}
