import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  KMSClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../KMSClient";
import { EnableKeyRotationRequest } from "../models/models_0";
export { __MetadataBearer, $Command };
export interface EnableKeyRotationCommandInput
  extends EnableKeyRotationRequest {}
export interface EnableKeyRotationCommandOutput extends __MetadataBearer {}
export declare class EnableKeyRotationCommand extends $Command<
  EnableKeyRotationCommandInput,
  EnableKeyRotationCommandOutput,
  KMSClientResolvedConfig
> {
  readonly input: EnableKeyRotationCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: EnableKeyRotationCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: KMSClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<EnableKeyRotationCommandInput, EnableKeyRotationCommandOutput>;
  private serialize;
  private deserialize;
}
