import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  KMSClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../KMSClient";
import {
  GetParametersForImportRequest,
  GetParametersForImportResponse,
} from "../models/models_0";
export { __MetadataBearer, $Command };
export interface GetParametersForImportCommandInput
  extends GetParametersForImportRequest {}
export interface GetParametersForImportCommandOutput
  extends GetParametersForImportResponse,
    __MetadataBearer {}
export declare class GetParametersForImportCommand extends $Command<
  GetParametersForImportCommandInput,
  GetParametersForImportCommandOutput,
  KMSClientResolvedConfig
> {
  readonly input: GetParametersForImportCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: GetParametersForImportCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: KMSClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<
    GetParametersForImportCommandInput,
    GetParametersForImportCommandOutput
  >;
  private serialize;
  private deserialize;
}
