import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  KMSClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../KMSClient";
import { ReEncryptRequest, ReEncryptResponse } from "../models/models_0";
export { __MetadataBearer, $Command };
export interface ReEncryptCommandInput extends ReEncryptRequest {}
export interface ReEncryptCommandOutput
  extends ReEncryptResponse,
    __MetadataBearer {}
export declare class ReEncryptCommand extends $Command<
  ReEncryptCommandInput,
  ReEncryptCommandOutput,
  KMSClientResolvedConfig
> {
  readonly input: ReEncryptCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: ReEncryptCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: KMSClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<ReEncryptCommandInput, ReEncryptCommandOutput>;
  private serialize;
  private deserialize;
}
