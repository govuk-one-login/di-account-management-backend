import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  KMSClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../KMSClient";
import { VerifyMacRequest, VerifyMacResponse } from "../models/models_0";
export { __MetadataBearer, $Command };
export interface VerifyMacCommandInput extends VerifyMacRequest {}
export interface VerifyMacCommandOutput
  extends VerifyMacResponse,
    __MetadataBearer {}
export declare class VerifyMacCommand extends $Command<
  VerifyMacCommandInput,
  VerifyMacCommandOutput,
  KMSClientResolvedConfig
> {
  readonly input: VerifyMacCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: VerifyMacCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: KMSClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<VerifyMacCommandInput, VerifyMacCommandOutput>;
  private serialize;
  private deserialize;
}
