AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: "A template to create the GOV.UK One login Account backend infrastructure"

Parameters:
  UserServicesStoreTableName:
    Type: String
    Default: user_services
  RawEventsStoreTableName:
    Type: String
    Default: raw_events
  ActivityLogsStoreTableName:
    Type: String
    Default: activity_log
  AlertingStackName:
    Description: The name of the stack that defines the Alerting resources
    Type: String
    Default: platform-alerting
  DummyEventStoreTableName:
    Type: String
    Default: dummy_events
  Environment:
    Description: "The environment type"
    Type: "String"
    AllowedValues:
      - "demo"
      - "dev"
      - "build"
      - "staging"
      - "integration"
      - "production"
    ConstraintDescription: must be dev, build, staging, integration or production
  VpcStackName:
    Description: >
      The name of the stack that defines the VPC in which this container will
      run.
    Type: String
    Default: vpc-enhanced
  CodeSigningConfigArn:
    Type: String
    Description: >
      The ARN of the Code Signing Config to use, provided by the deployment pipeline
    Default: "none"
  PermissionsBoundary:
    Type: String
    Description: >
      The ARN of the permissions boundary to apply to any role created by the template
    Default: "none"
  AccountManagementFrontendStackName:
    Type: String
    Default: account-mgmt-frontend
  TestRoleArn:
    Type: String
    Description: The ARN of the role the post-deploy tests are run from
    Default: "none"
  ProductTagValue:
    Description: Value for the Product Tag
    Type: String
    Default: GOV.UK Sign In
  OwnerTagValue:
    Description: Value for the Owner Tag
    Type: String
    Default: govuk-accounts-tech@digital.cabinet-office.gov.uk
  SourceTagValue:
    Description: Value for the Source Tag
    Type: String
    Default: alphagov/di-account-management-backend/deploy/template.yaml
  SystemTagValue:
    Description: Value for the System Tag
    Type: String
    Default: Accounts

Conditions:
  UseCodeSigning:
    Fn::Not:
      - Fn::Equals:
          - !Ref CodeSigningConfigArn
          - "none"

  UsePermissionsBoundary:
    Fn::Not:
      - Fn::Equals:
          - !Ref PermissionsBoundary
          - "none"

  IsNotDevelopmentOrDemo:
    Fn::Not:
      - Fn::Or:
          - Fn::Equals:
              - !Ref Environment
              - "dev"
          - Fn::Equals:
              - !Ref Environment
              - "demo"

  UseInternalEvents: !Or
    - !Equals [!Ref Environment, demo]
    - !Equals [!Ref Environment, dev]
    - !Equals [!Ref Environment, build]

  UseExternalEvents: !Or
    - !Equals [!Ref Environment, staging]
    - !Equals [!Ref Environment, integration]
    - !Equals [!Ref Environment, production]

  ExportLogsToSplunk:
    Fn::Or:
      - !Equals [!Ref Environment, staging]
      - !Equals [!Ref Environment, integration]
      - !Equals [!Ref Environment, production]

  GrantTestPermissions:
    Fn::Not:
      - Fn::Equals:
          - !Ref TestRoleArn
          - "none"

  UseCanaryDeployment: !Or
    - !Equals [!Ref Environment, production]
    - !Equals [!Ref Environment, integration]

Globals:
  Function:
    Environment:
      Variables:
        AWS_LAMBDA_EXEC_WRAPPER: /opt/dynatrace
        DT_CONNECTION_AUTH_TOKEN: !Sub
          - "{{resolve:secretsmanager:${SecretArn}:SecretString:DT_CONNECTION_AUTH_TOKEN}}"
          - SecretArn:
              !FindInMap [
                EnvironmentConfiguration,
                !Ref Environment,
                dynatraceSecretArn,
              ]
        DT_CONNECTION_BASE_URL: !Sub
          - "{{resolve:secretsmanager:${SecretArn}:SecretString:DT_CONNECTION_BASE_URL}}"
          - SecretArn:
              !FindInMap [
                EnvironmentConfiguration,
                !Ref Environment,
                dynatraceSecretArn,
              ]
        DT_CLUSTER_ID: !Sub
          - "{{resolve:secretsmanager:${SecretArn}:SecretString:DT_CLUSTER_ID}}"
          - SecretArn:
              !FindInMap [
                EnvironmentConfiguration,
                !Ref Environment,
                dynatraceSecretArn,
              ]
        DT_LOG_COLLECTION_AUTH_TOKEN: !Sub
          - "{{resolve:secretsmanager:${SecretArn}:SecretString:DT_LOG_COLLECTION_AUTH_TOKEN}}"
          - SecretArn:
              !FindInMap [
                EnvironmentConfiguration,
                !Ref Environment,
                dynatraceSecretArn,
              ]
        DT_TENANT: !Sub
          - "{{resolve:secretsmanager:${SecretArn}:SecretString:DT_TENANT}}"
          - SecretArn:
              !FindInMap [
                EnvironmentConfiguration,
                !Ref Environment,
                dynatraceSecretArn,
              ]
        DT_OPEN_TELEMETRY_ENABLE_INTEGRATION: "true"
    Architectures: ["arm64"]
    MemorySize: 128
    KmsKeyArn: !GetAtt LambdaKMSKey.Arn
    ReservedConcurrentExecutions: 10
    Runtime: nodejs18.x
    Timeout: 5
    VpcConfig:
      SubnetIds:
        - Fn::ImportValue: !Sub "${VpcStackName}-ProtectedSubnetIdA"
        - Fn::ImportValue: !Sub "${VpcStackName}-ProtectedSubnetIdB"
      SecurityGroupIds:
        - Fn::ImportValue: !Sub ${VpcStackName}-AWSServicesEndpointSecurityGroupId
    CodeSigningConfigArn: !If
      - UseCodeSigning
      - !Ref CodeSigningConfigArn
      - !Ref AWS::NoValue
    PermissionsBoundary: !If
      - UsePermissionsBoundary
      - !Ref PermissionsBoundary
      - !Ref AWS::NoValue
    Layers:
      - !Sub
        - "{{resolve:secretsmanager:${SecretArn}:SecretString:NODEJS_LAYER}}"
        - SecretArn:
            !FindInMap [
              EnvironmentConfiguration,
              !Ref Environment,
              dynatraceSecretArn,
            ]
    AutoPublishAlias: live
    DeploymentPreference:
      Enabled: true
      Type:
        Fn::If:
          - UseCanaryDeployment
          - Linear10PercentEvery1Minute
          - AllAtOnce
      Role: !GetAtt CodeDeployServiceRole.Arn

Mappings:
  InputQueue:
    demo:
      QueueArn: ""
      KeyArn: ""
    dev:
      QueueArn: ""
      KeyArn: ""
    build:
      QueueArn: ""
      KeyArn: ""
    staging:
      QueueArn: "arn:aws:sqs:eu-west-2:178023842775:self-staging-EC-SQS-Output-Queue-accounts"
      KeyArn: "arn:aws:kms:eu-west-2:178023842775:key/6dbe7362-a125-466b-a135-22c98c436f17"
    integration:
      QueueArn: "arn:aws:sqs:eu-west-2:729485541398:self-integration-EC-SQS-Output-Queue-accounts"
      KeyArn: "arn:aws:kms:eu-west-2:729485541398:key/6a4b784e-2f75-4f39-8b27-0fdf2134ca28"
    production:
      QueueArn: "arn:aws:sqs:eu-west-2:451773080033:self-production-EC-SQS-Output-Queue-accounts"
      KeyArn: "arn:aws:kms:eu-west-2:451773080033:key/e95d47b6-613d-4bea-93c9-d400cdfb31ee"

  IPVCoreAccounts:
    demo:
      AccountNumber: ""
    dev:
      AccountNumber: ""
    build:
      AccountNumber: "457601271792"
    staging:
      AccountNumber: "335257547869"
    integration:
      AccountNumber: "991138514218"
    production:
      AccountNumber: "075701497069"

  OrchestrationAccounts:
    demo:
      AccountNumber: ""
    dev:
      AccountNumber: ""
    build:
      AccountNumber: ""
    staging:
      AccountNumber: "758531536632"
    integration:
      AccountNumber: "761723964695"
    production:
      AccountNumber: "172348255554"

  EnvironmentVariables:
    ### These environment variables are referenced further down the file.
    ### Please ensure that any variables defined for an environment are defined for _all_ environments.
    demo:
      GOVACCOUNTSPUBLISHINGAPIURL: "https://account-api.integration.publishing.service.gov.uk"
      REPORTSUSPISCIOUSACTIVITYTEMPLATEID: "2b3170b5-159e-457f-a282-f30f6006dc32"
    dev:
      GOVACCOUNTSPUBLISHINGAPIURL: "https://account-api.integration.publishing.service.gov.uk"
      REPORTSUSPISCIOUSACTIVITYTEMPLATEID: "2b3170b5-159e-457f-a282-f30f6006dc32"
    build:
      GOVACCOUNTSPUBLISHINGAPIURL: "https://account-api.staging.publishing.service.gov.uk"
      REPORTSUSPISCIOUSACTIVITYTEMPLATEID: "2b3170b5-159e-457f-a282-f30f6006dc32"
    staging:
      GOVACCOUNTSPUBLISHINGAPIURL: "https://account-api.staging.publishing.service.gov.uk"
      REPORTSUSPISCIOUSACTIVITYTEMPLATEID: "2b3170b5-159e-457f-a282-f30f6006dc32"
    integration:
      GOVACCOUNTSPUBLISHINGAPIURL: "https://account-api.integration.publishing.service.gov.uk"
      REPORTSUSPISCIOUSACTIVITYTEMPLATEID: "0674c6e3-219c-4e3a-b04c-3786bac7f228"
    production:
      GOVACCOUNTSPUBLISHINGAPIURL: "https://account-api.publishing.service.gov.uk"
      REPORTSUSPISCIOUSACTIVITYTEMPLATEID: "0674c6e3-219c-4e3a-b04c-3786bac7f228"

  CredentialStoreAccounts:
    demo:
      AccountNumber: "013758878511"
    dev:
      AccountNumber: "013758878511"
    build:
      AccountNumber: "688341086169"
    staging:
      AccountNumber: "922902741880"
    integration:
      AccountNumber: "406416508755"
    production:
      AccountNumber: "499563136613"

  AccountInterventionsService:
    demo:
      AccountNumber: "013758878511"
    dev:
      AccountNumber: "013758878511"
    build:
      AccountNumber: "688341086169"
    staging:
      AccountNumber: "922902741880"
    integration:
      AccountNumber: "217747075921"
    production:
      AccountNumber: "324281879537"

  TxmaAccounts:
    demo:
      AccountNumber: "248098332657"
    dev:
      AccountNumber: "248098332657"
    build:
      AccountNumber: "750703655225"
    staging:
      AccountNumber: "178023842775"
    integration:
      AccountNumber: "729485541398"
    production:
      AccountNumber: "451773080033"

  EnvironmentConfiguration:
    demo:
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
      zendeskGroupIdSecretArn: arn:aws:secretsmanager:eu-west-2:654654326096:secret:/account-mgmt-backend/zendesk-group-id-token-jn0K88
      zendeskTagsSecretArn: arn:aws:secretsmanager:eu-west-2:654654326096:secret:/account-mgmt-backend/zendesk-tags-key-o0yqP7
      zendeskApiTokenSecretArn: arn:aws:secretsmanager:eu-west-2:654654326096:secret:/account-mgmt-backend/zendesk-api-token-9OK6kw
      zendeskApiUserSecretArn: arn:aws:secretsmanager:eu-west-2:654654326096:secret:/account-mgmt-backend/zendesk-api-user-key-xFarET
      zendeskApiUrlSecretArn: arn:aws:secretsmanager:eu-west-2:654654326096:secret:account-mgmt-backend/zendesk-api-url-key-0SJMs3
      zendeskTicketFormIdSecretArn: arn:aws:secretsmanager:eu-west-2:654654326096:secret:/account-mgmt-backend/zendesk-ticket-form-id-key-KtEVtO
      notifyApiKeySecretArn: arn:aws:secretsmanager:eu-west-2:654654326096:secret:account-mgmt-backend/notify-api-key-T4d4Wz
    dev:
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
      zendeskGroupIdSecretArn: arn:aws:secretsmanager:eu-west-2:985326104449:secret:/account-mgmt-backend/zendesk-group-id-token-1O5AvL
      zendeskTagsSecretArn: arn:aws:secretsmanager:eu-west-2:985326104449:secret:/account-mgmt-backend/zendesk-tags-key-itMbyV
      zendeskApiTokenSecretArn: arn:aws:secretsmanager:eu-west-2:985326104449:secret:/account-mgmt-backend/zendesk-api-token-urjQGc
      zendeskApiUserSecretArn: arn:aws:secretsmanager:eu-west-2:985326104449:secret:/account-mgmt-backend/zendesk-api-user-key-oPuZZU
      zendeskApiUrlSecretArn: arn:aws:secretsmanager:eu-west-2:985326104449:secret:/account-mgmt-backend/zendesk-api-url-key-nhK90l
      zendeskTicketFormIdSecretArn: arn:aws:secretsmanager:eu-west-2:985326104449:secret:/account-mgmt-backend/zendesk-ticket-form-id-key-QsdIP7
      notifyApiKeySecretArn: arn:aws:secretsmanager:eu-west-2:985326104449:secret:/account-mgmt-backend/notify-api-key-4P84y7
    build:
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
      zendeskGroupIdSecretArn: arn:aws:secretsmanager:eu-west-2:301577035144:secret:/account-mgmt-backend/zendesk-group-id-token-Ve5ojs
      zendeskTagsSecretArn: arn:aws:secretsmanager:eu-west-2:301577035144:secret:/account-mgmt-backend/zendesk-tags-key-H64ZpC
      zendeskApiTokenSecretArn: arn:aws:secretsmanager:eu-west-2:301577035144:secret:/account-mgmt-backend/zendesk-api-token-ayNIV1
      zendeskApiUserSecretArn: arn:aws:secretsmanager:eu-west-2:301577035144:secret:/account-mgmt-backend/zendesk-api-user-key-7jR9fV
      zendeskApiUrlSecretArn: arn:aws:secretsmanager:eu-west-2:301577035144:secret:/account-mgmt-backend/zendesk-api-url-key-UpWdv7
      zendeskTicketFormIdSecretArn: arn:aws:secretsmanager:eu-west-2:301577035144:secret:/account-mgmt-backend/zendesk-ticket-form-id-key-XYDm7B
      notifyApiKeySecretArn: arn:aws:secretsmanager:eu-west-2:301577035144:secret:/account-mgmt-backend/notify-api-key-8vHJMb
    staging:
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
      zendeskGroupIdSecretArn: arn:aws:secretsmanager:eu-west-2:539729775994:secret:/account-mgmt-backend/zendesk-group-id-token-HE0BjN
      zendeskTagsSecretArn: arn:aws:secretsmanager:eu-west-2:539729775994:secret:/account-mgmt-backend/zendesk-tags-key-IFQKUB
      zendeskApiTokenSecretArn: arn:aws:secretsmanager:eu-west-2:539729775994:secret:/account-mgmt-backend/zendesk-api-token-5HZvs4
      zendeskApiUserSecretArn: arn:aws:secretsmanager:eu-west-2:539729775994:secret:/account-mgmt-backend/zendesk-api-user-key-0AiaN0
      zendeskApiUrlSecretArn: arn:aws:secretsmanager:eu-west-2:539729775994:secret:/account-mgmt-backend/zendesk-api-url-key-wGN16k
      zendeskTicketFormIdSecretArn: arn:aws:secretsmanager:eu-west-2:539729775994:secret:/account-mgmt-backend/zendesk-ticket-form-id-key-e9yPTR
      notifyApiKeySecretArn: arn:aws:secretsmanager:eu-west-2:539729775994:secret:/account-mgmt-backend/notify-api-key-lSCNeM
    integration:
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
      zendeskGroupIdSecretArn: arn:aws:secretsmanager:eu-west-2:666500506359:secret:/account-mgmt-backend/zendesk-group-id-token-djJbv6
      zendeskTagsSecretArn: arn:aws:secretsmanager:eu-west-2:666500506359:secret:/account-mgmt-backend/zendesk-tags-key-q35WDl
      zendeskApiTokenSecretArn: arn:aws:secretsmanager:eu-west-2:666500506359:secret:/account-mgmt-backend/zendesk-api-token-fByFIz
      zendeskApiUserSecretArn: arn:aws:secretsmanager:eu-west-2:666500506359:secret:/account-mgmt-backend/zendesk-api-user-key-oVvUI5
      zendeskApiUrlSecretArn: arn:aws:secretsmanager:eu-west-2:666500506359:secret:/account-mgmt-backend/zendesk-api-url-key-b5ToSY
      zendeskTicketFormIdSecretArn: arn:aws:secretsmanager:eu-west-2:666500506359:secret:/account-mgmt-backend/zendesk-ticket-form-id-key-2iXqu6
      notifyApiKeySecretArn: arn:aws:secretsmanager:eu-west-2:666500506359:secret:/account-mgmt-backend/notify-api-key-nvDui4
    production:
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceProductionVariables
      zendeskGroupIdSecretArn: arn:aws:secretsmanager:eu-west-2:026991849909:secret:/account-mgmt-backend/zendesk-group-id-token-mE55Wr
      zendeskTagsSecretArn: arn:aws:secretsmanager:eu-west-2:026991849909:secret:/account-mgmt-backend/zendesk-tags-key-FAHfJf
      zendeskApiTokenSecretArn: arn:aws:secretsmanager:eu-west-2:026991849909:secret:/account-mgmt-backend/zendesk-api-token-aZOj3s
      zendeskApiUserSecretArn: arn:aws:secretsmanager:eu-west-2:026991849909:secret:/account-mgmt-backend/zendesk-api-user-key-cMCENu
      zendeskApiUrlSecretArn: arn:aws:secretsmanager:eu-west-2:026991849909:secret:/account-mgmt-backend/zendesk-api-url-key-WNGekL
      zendeskTicketFormIdSecretArn: arn:aws:secretsmanager:eu-west-2:026991849909:secret:/account-mgmt-backend/zendesk-ticket-form-id-key-cAmu3i
      notifyApiKeySecretArn: arn:aws:secretsmanager:eu-west-2:026991849909:secret:/account-mgmt-backend/notify-api-key-Ve4Yk1

Resources:
  ######################################
  # Dummy events store
  ######################################

  DummyEventStore:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: timestamp
          AttributeType: N
      BillingMode: PAY_PER_REQUEST
      TableName: !Ref DummyEventStoreTableName
      KeySchema:
        - AttributeName: id
          KeyType: HASH
        - AttributeName: timestamp
          KeyType: RANGE
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      SSESpecification:
        SSEEnabled: true
        SSEType: KMS
        KMSMasterKeyId: !GetAtt DatabaseKmsKey.Arn
      StreamSpecification:
        StreamViewType: NEW_IMAGE
      Tags:
        - Key: Product
          Value: GOV.UK Sign In
        - Key: System
          Value: Account Management Backend
        - Key: Owner
          Value: govuk-accounts-tech@digital.cabinet-office.gov.uk
        - Key: Environment
          Value: !Ref "Environment"
        - Key: Source
          Value: "https://github.com/alphagov/di-account-management-backend/blob/main/infrastructure/template.yaml"

  ######################################
  # Raw events store
  ######################################

  RawEventsStore:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: timestamp
          AttributeType: N
      BillingMode: PAY_PER_REQUEST
      TableName: !Ref RawEventsStoreTableName
      KeySchema:
        - AttributeName: id
          KeyType: HASH
        - AttributeName: timestamp
          KeyType: RANGE
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      SSESpecification:
        SSEEnabled: true
        SSEType: KMS
        KMSMasterKeyId: !GetAtt DatabaseKmsKey.Arn
      StreamSpecification:
        StreamViewType: NEW_IMAGE
      TimeToLiveSpecification:
        AttributeName: remove_at
        Enabled: true
      Tags:
        - Key: Product
          Value: GOV.UK Sign In
        - Key: System
          Value: Account Management Backend
        - Key: Owner
          Value: govuk-accounts-tech@digital.cabinet-office.gov.uk
        - Key: Environment
          Value: !Ref "Environment"
        - Key: Source
          Value: "https://github.com/alphagov/di-account-management-backend/blob/main/infrastructure/template.yaml"

  ######################################
  # User services store
  ######################################

  UserServicesStore:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      AttributeDefinitions:
        - AttributeName: user_id
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      TableName: !Ref UserServicesStoreTableName
      KeySchema:
        - AttributeName: user_id
          KeyType: HASH
      Tags:
        - Key: Product
          Value: GOV.UK Sign In
        - Key: System
          Value: Account Management Backend
        - Key: Owner
          Value: govuk-accounts-tech@digital.cabinet-office.gov.uk
        - Key: Environment
          Value: !Ref "Environment"
        - Key: Source
          Value: "https://github.com/alphagov/di-account-management-backend/blob/main/infrastructre/template.yaml"
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      SSESpecification:
        SSEEnabled: true
        SSEType: KMS
        KMSMasterKeyId: !GetAtt DatabaseKmsKey.Arn

  #########################
  # User Activity Log store
  #########################

  UserActivityLogsStore:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      AttributeDefinitions:
        - AttributeName: user_id
          AttributeType: S
        - AttributeName: session_id
          AttributeType: S
        - AttributeName: event_id
          AttributeType: S
      GlobalSecondaryIndexes:
        - IndexName: SessionIdIndex
          KeySchema:
            - AttributeName: session_id
              KeyType: HASH
          Projection:
            ProjectionType: ALL
      BillingMode: PAY_PER_REQUEST
      TableName: !Ref ActivityLogsStoreTableName
      KeySchema:
        - AttributeName: user_id
          KeyType: HASH
        - AttributeName: event_id
          KeyType: RANGE
      Tags:
        - Key: Product
          Value: GOV.UK Sign In
        - Key: System
          Value: Account Management Backend
        - Key: Owner
          Value: govuk-accounts-tech@digital.cabinet-office.gov.uk
        - Key: Environment
          Value: !Ref "Environment"
        - Key: Source
          Value: "https://github.com/alphagov/di-account-management-backend/blob/main/infrastructre/template.yaml"
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      SSESpecification:
        SSEEnabled: true
        SSEType: KMS
        KMSMasterKeyId: !GetAtt DatabaseKmsKey.Arn

  ######################################
  # TxMA Event Queue (Dummy for now)
  ######################################

  TxMAInputDummyQueue:
    Type: AWS::SQS::Queue
    Properties:
      KmsMasterKeyId: !GetAtt QueueKmsKey.Arn
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete

  TxMAInputDummyQueueOldestMessageAgeAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName:
        !Join [
          "-",
          [
            !Ref AWS::StackName,
            !Ref Environment,
            TxMAInputDummyQueueOldestMessageAgeAlarm,
          ],
        ]
      MetricName: ApproximateAgeOfOldestMessage
      Namespace: AWS/SQS
      Statistic: Maximum
      Period: 300
      EvaluationPeriods: 1
      Threshold: 300
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
        - Name: QueueName
          Value: !GetAtt TxMAInputDummyQueue.QueueName
      AlarmActions:
        - !Sub "{{resolve:ssm:/${AlertingStackName}/SNS/LowAlertNotificationTopic/ARN}}"

  ########################################
  # Output queue for audit events to TxMA
  ########################################

  AuditOutputQueue:
    Type: AWS::SQS::Queue
    Properties:
      KmsMasterKeyId: !Ref AuditEncryptionKey
      MessageRetentionPeriod: 1209600
      VisibilityTimeout: 70
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt AuditDeadLetterQueue.Arn
        maxReceiveCount: 5
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain

  AuditOutputQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref AuditOutputQueue
      PolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              AWS: !FindInMap [TxmaAccounts, !Ref Environment, AccountNumber]
            Action:
              - sqs:ChangeMessageVisibility
              - sqs:DeleteMessage
              - sqs:GetQueueAttributes
              - sqs:ReceiveMessage
            Resource: !GetAtt AuditOutputQueue.Arn

  AuditDeadLetterQueue:
    Type: AWS::SQS::Queue
    Properties:
      KmsMasterKeyId: !Ref AuditEncryptionKey
      MessageRetentionPeriod: 1209600
      RedriveAllowPolicy:
        redrivePermission: allowAll
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain

  AuditEncryptionKey:
    Type: AWS::KMS::Key
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Properties:
      EnableKeyRotation: true
      KeyPolicy:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action: kms:*
            Resource:
              - "*"
          - Effect: Allow
            Principal:
              AWS: !FindInMap [TxmaAccounts, !Ref Environment, AccountNumber]
            Action: kms:Decrypt
            Resource:
              - "*"

  AuditEncryptionKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub "alias/${AWS::StackName}/${Environment}/AuditEncryptionKey"
      TargetKeyId: !Ref AuditEncryptionKey

  AuditQueueArnParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Description: The ARN of the audit event output queue
      Name: !Sub "/${AWS::StackName}/SQS/AuditQueue/ARN"
      Type: String
      Value: !GetAtt AuditOutputQueue.Arn

  AuditQueueUrlParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Description: The URL of the audit event output queue
      Name: !Sub "/${AWS::StackName}/SQS/AuditQueue/URL"
      Type: String
      Value: !Ref AuditOutputQueue

  AuditQueueKeyArnParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Description: The ARN of the KMS key encrypting the audit event output queue
      Name: !Sub "/${AWS::StackName}/KMS/AuditQueueKey/ARN"
      Type: String
      Value: !GetAtt AuditEncryptionKey.Arn

  AuditOutputQueueOldestMessageAgeAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName:
        !Join [
          "-",
          [
            !Ref AWS::StackName,
            !Ref Environment,
            AuditOutputQueueOldestMessageAgeAlarm,
          ],
        ]
      MetricName: ApproximateAgeOfOldestMessage
      Namespace: AWS/SQS
      Statistic: Maximum
      Period: 300
      EvaluationPeriods: 1
      Threshold: 300
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
        - Name: QueueName
          Value: !GetAtt AuditOutputQueue.QueueName
      AlarmActions:
        - !Sub "{{resolve:ssm:/${AlertingStackName}/SNS/LowAlertNotificationTopic/ARN}}"

  AuditDeadLetterQueueOldestMessageAgeAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName:
        !Join [
          "-",
          [
            !Ref AWS::StackName,
            !Ref Environment,
            AuditDeadLetterQueueOldestMessageAgeAlarm,
          ],
        ]
      MetricName: ApproximateAgeOfOldestMessage
      Namespace: AWS/SQS
      Statistic: Maximum
      Period: 300
      EvaluationPeriods: 1
      Threshold: 300
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
        - Name: QueueName
          Value: !GetAtt AuditDeadLetterQueue.QueueName
      AlarmActions:
        - !Sub "{{resolve:ssm:/${AlertingStackName}/SNS/LowAlertNotificationTopic/ARN}}"

  ######################
  # Save Raw Events
  ######################

  SaveRawEventsFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - SaveRawEventsFunctionLogGroup
    Properties:
      FunctionName: !Sub ${Environment}-${AWS::StackName}-save-raw-events
      CodeUri: src
      PackageType: Zip
      Events:
        InputQueue:
          Type: SQS
          Properties:
            Queue: !If
              - UseInternalEvents
              - !GetAtt TxMAInputDummyQueue.Arn
              - !FindInMap [InputQueue, !Ref Environment, QueueArn]
      DeadLetterQueue:
        Type: SQS
        TargetArn: !GetAtt SaveRawEventsDeadLetterQueue.Arn
      Handler: save-raw-events.handler
      Role: !GetAtt SaveRawEventsRole.Arn
      Environment:
        Variables:
          TABLE_NAME: !Ref RawEventsStoreTableName
          NODE_OPTIONS: --enable-source-maps
      DeploymentPreference:
        Alarms:
          - !Ref SaveRawEventsFunctionSuccessRate
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Format: "esm"
        OutExtension:
          - .js=.mjs
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - save-raw-events.ts
        Banner:
          - js=import { createRequire } from 'module'; const require = createRequire(import.meta.url);

  SaveRawEventsDeadLetterQueue:
    Type: AWS::SQS::Queue
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      MessageRetentionPeriod: 1209600
      KmsMasterKeyId: !GetAtt QueueKmsKey.Arn

  SaveRawEventsRole:
    Type: AWS::IAM::Role
    Properties:
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
        - !Ref SaveRawEventsPolicy
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - "sts:AssumeRole"

  SaveRawEventsPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - sqs:ReceiveMessage
              - sqs:DeleteMessage
              - sqs:GetQueueAttributes
            Resource: !If
              - UseInternalEvents
              - !GetAtt TxMAInputDummyQueue.Arn
              - !FindInMap [InputQueue, !Ref Environment, QueueArn]
          - Effect: Allow
            Action:
              - sqs:SendMessage
            Resource: !GetAtt SaveRawEventsDeadLetterQueue.Arn
          - Effect: Allow
            Action:
              - dynamodb:PutItem
              - dynamodb:UpdateItem
            Resource:
              - !GetAtt RawEventsStore.Arn
              - !Sub
                - "${Arn}/*"
                - Arn: !GetAtt RawEventsStore.Arn
          - Effect: Allow
            Action:
              - kms:Decrypt
              - kms:GenerateDataKey*
              - kms:ReEncrypt*
            Resource:
              - !GetAtt QueueKmsKey.Arn
              - !GetAtt DatabaseKmsKey.Arn
              - !If
                - UseInternalEvents
                - !Ref AWS::NoValue
                - !FindInMap [InputQueue, !Ref Environment, KeyArn]

  SaveRawEventsFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${Environment}-${AWS::StackName}-save-raw-events"
      RetentionInDays: 30
      KmsKeyId: !GetAtt LoggingKmsKey.Arn

  SaveRawEventsCSLSSubscription:
    Condition: ExportLogsToSplunk
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: !Sub "{{resolve:ssm:/${Environment}/Platform/Logs/Subscription/CSLS/ARN}}"
      FilterPattern: ""
      LogGroupName: !Ref SaveRawEventsFunctionLogGroup

  SaveRawEventsDLQAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName:
        !Join [
          "-",
          [!Ref AWS::StackName, !Ref Environment, SaveRawEventsDLQAlarm],
        ]
      AlarmDescription: More than 1 raw event failed to be saved in the last 5 minutes.
      Namespace: "AWS/SQS"
      MetricName: "ApproximateNumberOfMessagesVisible"
      Dimensions:
        - Name: "QueueName"
          Value: !GetAtt SaveRawEventsDeadLetterQueue.QueueName
      Statistic: "Sum"
      Period: 300
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: "GreaterThanOrEqualToThreshold"
      AlarmActions:
        - !Sub "{{resolve:ssm:/${AlertingStackName}/SNS/LowAlertNotificationTopic/ARN}}"
      ActionsEnabled: true

  SaveRawEventsDeadLetterQueueOldestMessageAgeAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName:
        !Join [
          "-",
          [
            !Ref AWS::StackName,
            !Ref Environment,
            SaveRawEventsDeadLetterQueueOldestMessageAgeAlarm,
          ],
        ]
      MetricName: ApproximateAgeOfOldestMessage
      Namespace: AWS/SQS
      Statistic: Maximum
      Period: 300
      EvaluationPeriods: 1
      Threshold: 300
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
        - Name: QueueName
          Value: !GetAtt SaveRawEventsDeadLetterQueue.QueueName
      AlarmActions:
        - !Sub "{{resolve:ssm:/${AlertingStackName}/SNS/LowAlertNotificationTopic/ARN}}"

  SaveRawEventsFunctionSuccessRate:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName:
        !Join [
          "-",
          [
            !Ref AWS::StackName,
            !Ref Environment,
            SaveRawEventsFunctionSuccessRate,
          ],
        ]
      Metrics:
        - Id: errors
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Errors
              Dimensions:
                - Name: FunctionName
                  Value: !Ref SaveRawEventsFunction
            Period: 300
            Stat: Sum
          ReturnData: false
        - Id: invocations
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Invocations
              Dimensions:
                - Name: FunctionName
                  Value: !Ref SaveRawEventsFunction
            Period: 300
            Stat: Sum
          ReturnData: false
        - Id: successRate
          Expression: "1 - (errors / invocations)"
          Label: "Success Rate"
          ReturnData: true
      Threshold: 0.95
      ComparisonOperator: LessThanThreshold
      EvaluationPeriods: 1
      AlarmActions:
        - !Sub "{{resolve:ssm:/${AlertingStackName}/SNS/LowAlertNotificationTopic/ARN}}"

  ########################
  # Querying User Services
  ########################

  QueryUserServicesFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - QueryUserServicesFunctionLogGroup
    Properties:
      FunctionName: !Sub ${Environment}-${AWS::StackName}-query-user-services
      CodeUri: src
      PackageType: Zip
      Events:
        DynamoStream:
          Type: DynamoDB
          Properties:
            BatchSize: 1
            Stream: !GetAtt RawEventsStore.StreamArn
            Enabled: true
            DestinationConfig:
              OnFailure:
                Destination: !GetAtt QueryUserServicesDeadLetterQueue.Arn
            StartingPosition: LATEST
            FilterCriteria:
              Filters:
                - Pattern: '{ "eventName": ["INSERT"] }'
      DeadLetterQueue:
        Type: SQS
        TargetArn: !GetAtt QueryUserServicesDeadLetterQueue.Arn
      Handler: query-user-services.handler
      Role: !GetAtt QueryUserServicesRole.Arn
      Environment:
        Variables:
          TABLE_NAME: !Ref UserServicesStoreTableName
          OUTPUT_QUEUE_URL: !Ref UserServicesToFormatQueue
          NODE_OPTIONS: --enable-source-maps
      DeploymentPreference:
        Alarms:
          - !Ref QueryUserServicesFunctionSuccessRate
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Format: "esm"
        OutExtension:
          - .js=.mjs
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - query-user-services.ts
        Banner:
          - js=import { createRequire } from 'module'; const require = createRequire(import.meta.url);

  QueryUserServicesDeadLetterQueue:
    Type: AWS::SQS::Queue
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      MessageRetentionPeriod: 1209600
      KmsMasterKeyId: !GetAtt QueueKmsKey.Arn

  QueryUserServicesRole:
    Type: AWS::IAM::Role
    Properties:
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
        - !Ref QueryUserServicesPolicy
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - "sts:AssumeRole"

  QueryUserServicesPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - sqs:ReceiveMessage
              - sqs:DeleteMessage
              - sqs:GetQueueAttributes
            Resource: !GetAtt TxMAInputDummyQueue.Arn
          - Effect: Allow
            Action:
              - sqs:SendMessage
            Resource: !GetAtt UserServicesToFormatQueue.Arn
          - Effect: Allow
            Action:
              - sqs:SendMessage
            Resource: !GetAtt QueryUserServicesDeadLetterQueue.Arn
          - Effect: Allow
            Action:
              - dynamodb:Query
              - dynamodb:GetItem
            Resource:
              - !GetAtt UserServicesStore.Arn
              - !Sub
                - "${Arn}/*"
                - Arn: !GetAtt UserServicesStore.Arn
          - Effect: Allow
            Action:
              - dynamodb:DescribeStream
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:ListStreams
            Resource:
              - !GetAtt RawEventsStore.StreamArn
              - !Sub
                - "${Arn}/*"
                - Arn: !GetAtt RawEventsStore.StreamArn
          - Effect: Allow
            Action:
              - kms:Decrypt
              - kms:GenerateDataKey*
              - kms:ReEncrypt*
            Resource:
              - !GetAtt QueueKmsKey.Arn
              - !GetAtt DatabaseKmsKey.Arn

  QueryUserServicesFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${Environment}-${AWS::StackName}-query-user-services"
      RetentionInDays: 30
      KmsKeyId: !GetAtt LoggingKmsKey.Arn

  QueryUserServicesCSLSSubscription:
    Condition: ExportLogsToSplunk
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: !Sub "{{resolve:ssm:/${Environment}/Platform/Logs/Subscription/CSLS/ARN}}"
      FilterPattern: ""
      LogGroupName: !Ref QueryUserServicesFunctionLogGroup

  UserServicesToFormatQueue:
    Type: AWS::SQS::Queue
    Properties:
      KmsMasterKeyId: !GetAtt QueueKmsKey.Arn
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete

  QueryUserServicesDLQAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName:
        !Join [
          "-",
          [!Ref AWS::StackName, !Ref Environment, QueryUserServiceDLQAlarm],
        ]
      AlarmDescription: More than 1 query for user services has failed in the last 5 minutes.
      Namespace: "AWS/SQS"
      MetricName: "ApproximateNumberOfMessagesVisible"
      Dimensions:
        - Name: "QueueName"
          Value: !GetAtt QueryUserServicesDeadLetterQueue.QueueName
      Statistic: "Sum"
      Period: 300
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: "GreaterThanOrEqualToThreshold"
      AlarmActions:
        - !Sub "{{resolve:ssm:/${AlertingStackName}/SNS/LowAlertNotificationTopic/ARN}}"
      ActionsEnabled: true

  QueryUserServicesDeadLetterQueueOldestMessageAgeAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName:
        !Join [
          "-",
          [
            !Ref AWS::StackName,
            !Ref Environment,
            QueryUserServicesDeadLetterQueueOldestMessageAgeAlarm,
          ],
        ]
      MetricName: ApproximateAgeOfOldestMessage
      Namespace: AWS/SQS
      Statistic: Maximum
      Period: 300
      EvaluationPeriods: 1
      Threshold: 300
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
        - Name: QueueName
          Value: !GetAtt QueryUserServicesDeadLetterQueue.QueueName
      AlarmActions:
        - !Sub "{{resolve:ssm:/${AlertingStackName}/SNS/LowAlertNotificationTopic/ARN}}"

  UserServicesToFormatQueueOldestMessageAgeAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName:
        !Join [
          "-",
          [
            !Ref AWS::StackName,
            !Ref Environment,
            UserServicesToFormatQueueOldestMessageAgeAlarm,
          ],
        ]
      MetricName: ApproximateAgeOfOldestMessage
      Namespace: AWS/SQS
      Statistic: Maximum
      Period: 300
      EvaluationPeriods: 1
      Threshold: 300
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
        - Name: QueueName
          Value: !GetAtt UserServicesToFormatQueue.QueueName
      AlarmActions:
        - !Sub "{{resolve:ssm:/${AlertingStackName}/SNS/LowAlertNotificationTopic/ARN}}"

  QueryUserServicesFunctionSuccessRate:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName:
        !Join [
          "-",
          [!Ref AWS::StackName, !Ref Environment, QueryUserServicesFunction],
        ]
      Metrics:
        - Id: errors
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Errors
              Dimensions:
                - Name: FunctionName
                  Value: !Ref QueryUserServicesFunction
            Period: 300
            Stat: Sum
          ReturnData: false
        - Id: invocations
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Invocations
              Dimensions:
                - Name: FunctionName
                  Value: !Ref QueryUserServicesFunction
            Period: 300
            Stat: Sum
          ReturnData: false
        - Id: successRate
          Expression: "1 - (errors / invocations)"
          Label: "Success Rate"
          ReturnData: true
      Threshold: 0.95
      ComparisonOperator: LessThanThreshold
      EvaluationPeriods: 1
      AlarmActions:
        - !Sub "{{resolve:ssm:/${AlertingStackName}/SNS/LowAlertNotificationTopic/ARN}}"

  #################################
  # Formatting User Services Record
  #################################

  FormatUserServicesFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - FormatUserServicesFunctionLogGroup
    Properties:
      FunctionName: !Sub ${Environment}-${AWS::StackName}-format-user-services
      CodeUri: src
      PackageType: Zip
      Events:
        UserServicesToFormatQueue:
          Type: SQS
          Properties:
            Queue: !GetAtt UserServicesToFormatQueue.Arn
      DeadLetterQueue:
        Type: SQS
        TargetArn: !GetAtt FormatUserServicesDeadLetterQueue.Arn
      Handler: format-user-services.handler
      Role: !GetAtt FormatUserServicesRole.Arn
      Environment:
        Variables:
          OUTPUT_QUEUE_URL: !Ref UserServicesToWriteQueue
          NODE_OPTIONS: --enable-source-maps
      DeploymentPreference:
        Alarms:
          - !Ref FormatUserServicesFunctionSuccessRate
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Format: "esm"
        OutExtension:
          - .js=.mjs
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - format-user-services.ts
        Banner:
          - js=import { createRequire } from 'module'; const require = createRequire(import.meta.url);

  FormatUserServicesDeadLetterQueue:
    Type: AWS::SQS::Queue
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      MessageRetentionPeriod: 1209600
      KmsMasterKeyId: !GetAtt QueueKmsKey.Arn

  FormatUserServicesRole:
    Type: AWS::IAM::Role
    Properties:
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
        - !Ref FormatUserServicesPolicy
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - "sts:AssumeRole"

  FormatUserServicesPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - sqs:ReceiveMessage
              - sqs:DeleteMessage
              - sqs:GetQueueAttributes
            Resource: !GetAtt UserServicesToFormatQueue.Arn
          - Effect: Allow
            Action:
              - sqs:SendMessage
            Resource: !GetAtt FormatUserServicesDeadLetterQueue.Arn
          - Effect: Allow
            Action:
              - sqs:SendMessage
            Resource: !GetAtt UserServicesToWriteQueue.Arn
          - Effect: Allow
            Action:
              - kms:Decrypt
              - kms:GenerateDataKey*
              - kms:ReEncrypt*
            Resource: !GetAtt QueueKmsKey.Arn

  FormatUserServicesFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${Environment}-${AWS::StackName}-format-user-services"
      RetentionInDays: 30
      KmsKeyId: !GetAtt LoggingKmsKey.Arn

  FormatUserServicesCSLSSubscription:
    Condition: ExportLogsToSplunk
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: !Sub "{{resolve:ssm:/${Environment}/Platform/Logs/Subscription/CSLS/ARN}}"
      FilterPattern: ""
      LogGroupName: !Ref FormatUserServicesFunctionLogGroup

  UserServicesToWriteQueue:
    Type: AWS::SQS::Queue
    Properties:
      KmsMasterKeyId: !GetAtt QueueKmsKey.Arn
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete

  FormatDeadLetterQueueAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName:
        !Join [
          "-",
          [!Ref AWS::StackName, !Ref Environment, FormatDeadLetterQueueAlarm],
        ]
      AlarmDescription: More than 1 un-formatted user service record failed to be formatted in the last 5 minutes.
      Namespace: "AWS/SQS"
      MetricName: "ApproximateNumberOfMessagesVisible"
      Dimensions:
        - Name: "QueueName"
          Value: !GetAtt FormatUserServicesDeadLetterQueue.QueueName
      Statistic: "Sum"
      Period: 300
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: "GreaterThanOrEqualToThreshold"
      AlarmActions:
        - !Sub "{{resolve:ssm:/${AlertingStackName}/SNS/LowAlertNotificationTopic/ARN}}"
      ActionsEnabled: true

  FormatUserServicesDeadLetterQueueOldestMessageAgeAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName:
        !Join [
          "-",
          [
            !Ref AWS::StackName,
            !Ref Environment,
            FormatUserServicesDeadLetterQueueOldestMessageAgeAlarm,
          ],
        ]
      MetricName: ApproximateAgeOfOldestMessage
      Namespace: AWS/SQS
      Statistic: Maximum
      Period: 300
      EvaluationPeriods: 1
      Threshold: 300
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
        - Name: QueueName
          Value: !GetAtt FormatUserServicesDeadLetterQueue.QueueName
      AlarmActions:
        - !Sub "{{resolve:ssm:/${AlertingStackName}/SNS/LowAlertNotificationTopic/ARN}}"

  UserServicesToWriteQueueOldestMessageAgeAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName:
        !Join [
          "-",
          [
            !Ref AWS::StackName,
            !Ref Environment,
            UserServicesToWriteQueueOldestMessageAgeAlarm,
          ],
        ]
      MetricName: ApproximateAgeOfOldestMessage
      Namespace: AWS/SQS
      Statistic: Maximum
      Period: 300
      EvaluationPeriods: 1
      Threshold: 300
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
        - Name: QueueName
          Value: !GetAtt UserServicesToWriteQueue.QueueName
      AlarmActions:
        - !Sub "{{resolve:ssm:/${AlertingStackName}/SNS/LowAlertNotificationTopic/ARN}}"

  FormatUserServicesFunctionSuccessRate:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName:
        !Join [
          "-",
          [
            !Ref AWS::StackName,
            !Ref Environment,
            FormatUserServicesFunctionSuccessRate,
          ],
        ]
      Metrics:
        - Id: errors
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Errors
              Dimensions:
                - Name: FunctionName
                  Value: !Ref FormatUserServicesFunction
            Period: 300
            Stat: Sum
          ReturnData: false
        - Id: invocations
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Invocations
              Dimensions:
                - Name: FunctionName
                  Value: !Ref FormatUserServicesFunction
            Period: 300
            Stat: Sum
          ReturnData: false
        - Id: successRate
          Expression: "1 - (errors / invocations)"
          Label: "Success Rate"
          ReturnData: true
      Threshold: 0.95
      ComparisonOperator: LessThanThreshold
      EvaluationPeriods: 1
      AlarmActions:
        - !Sub "{{resolve:ssm:/${AlertingStackName}/SNS/LowAlertNotificationTopic/ARN}}"

  #########################
  # Write the User Services
  #########################

  WriteUserServicesFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - WriteUserServicesFunctionLogGroup
    Properties:
      FunctionName: !Sub ${Environment}-${AWS::StackName}-write-user-services
      CodeUri: src
      PackageType: Zip
      Events:
        UserServicesToWriteQueue:
          Type: SQS
          Properties:
            Queue: !GetAtt UserServicesToWriteQueue.Arn
      DeadLetterQueue:
        Type: SQS
        TargetArn: !GetAtt WriteUserServicesDeadLetterQueue.Arn
      Handler: write-user-services.handler
      Role: !GetAtt WriteServiceRecordRole.Arn
      Environment:
        Variables:
          TABLE_NAME: !Ref UserServicesStoreTableName
          NODE_OPTIONS: --enable-source-maps
      DeploymentPreference:
        Alarms:
          - !Ref WriteUserServicesFunctionSuccessRate
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Format: "esm"
        OutExtension:
          - .js=.mjs
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - write-user-services.ts
        Banner:
          - js=import { createRequire } from 'module'; const require = createRequire(import.meta.url);

  WriteUserServicesDeadLetterQueue:
    Type: AWS::SQS::Queue
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      MessageRetentionPeriod: 1209600
      KmsMasterKeyId: !GetAtt QueueKmsKey.Arn

  WriteServiceRecordRole:
    Type: AWS::IAM::Role
    Properties:
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
        - !Ref WriteServiceRecordPolicy
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - "sts:AssumeRole"

  WriteServiceRecordPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - sqs:ReceiveMessage
              - sqs:DeleteMessage
              - sqs:GetQueueAttributes
            Resource: !GetAtt UserServicesToWriteQueue.Arn
          - Effect: Allow
            Action:
              - sqs:SendMessage
            Resource: !GetAtt WriteUserServicesDeadLetterQueue.Arn
          - Effect: Allow
            Action:
              - dynamodb:PutItem
              - dynamodb:UpdateItem
            Resource:
              - !GetAtt UserServicesStore.Arn
              - !Sub
                - "${Arn}/*"
                - Arn: !GetAtt UserServicesStore.Arn
          - Effect: Allow
            Action:
              - kms:Decrypt
              - kms:GenerateDataKey*
              - kms:ReEncrypt*
            Resource:
              - !GetAtt QueueKmsKey.Arn
              - !GetAtt DatabaseKmsKey.Arn

  WriteUserServicesFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${Environment}-${AWS::StackName}-write-user-services"
      RetentionInDays: 30
      KmsKeyId: !GetAtt LoggingKmsKey.Arn

  WriteUserServicesCSLSSubscription:
    Condition: ExportLogsToSplunk
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: !Sub "{{resolve:ssm:/${Environment}/Platform/Logs/Subscription/CSLS/ARN}}"
      FilterPattern: ""
      LogGroupName: !Ref WriteUserServicesFunctionLogGroup

  WriteUserServicesDeadLetterQueueAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName:
        !Join [
          "-",
          [
            !Ref AWS::StackName,
            !Ref Environment,
            WriteUserServicesDeadLetterQueueAlarm,
          ],
        ]
      AlarmDescription: More than 1 user service record failed to be saved in the last 5 minutes.
      Namespace: "AWS/SQS"
      MetricName: "ApproximateNumberOfMessagesVisible"
      Dimensions:
        - Name: "QueueName"
          Value: !GetAtt WriteUserServicesDeadLetterQueue.QueueName
      Statistic: "Sum"
      Period: 300
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: "GreaterThanOrEqualToThreshold"
      AlarmActions:
        - !Sub "{{resolve:ssm:/${AlertingStackName}/SNS/LowAlertNotificationTopic/ARN}}"
      ActionsEnabled: true

  WriteUserServicesDeadLetterQueueOldestMessageAgeAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName:
        !Join [
          "-",
          [
            !Ref AWS::StackName,
            !Ref Environment,
            WriteUserServicesDeadLetterQueueOldestMessageAgeAlarm,
          ],
        ]
      MetricName: ApproximateAgeOfOldestMessage
      Namespace: AWS/SQS
      Statistic: Maximum
      Period: 300
      EvaluationPeriods: 1
      Threshold: 300
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
        - Name: QueueName
          Value: !GetAtt WriteUserServicesDeadLetterQueue.QueueName
      AlarmActions:
        - !Sub "{{resolve:ssm:/${AlertingStackName}/SNS/LowAlertNotificationTopic/ARN}}"

  WriteUserServicesFunctionSuccessRate:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName:
        !Join [
          "-",
          [
            !Ref AWS::StackName,
            !Ref Environment,
            WriteUserServicesFunctionSuccessRate,
          ],
        ]
      Metrics:
        - Id: errors
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Errors
              Dimensions:
                - Name: FunctionName
                  Value: !Ref WriteUserServicesFunction
            Period: 300
            Stat: Sum
          ReturnData: false
        - Id: invocations
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Invocations
              Dimensions:
                - Name: FunctionName
                  Value: !Ref WriteUserServicesFunction
            Period: 300
            Stat: Sum
          ReturnData: false
        - Id: successRate
          Expression: "1 - (errors / invocations)"
          Label: "Success Rate"
          ReturnData: true
      Threshold: 0.95
      ComparisonOperator: LessThanThreshold
      EvaluationPeriods: 1
      AlarmActions:
        - !Sub "{{resolve:ssm:/${AlertingStackName}/SNS/LowAlertNotificationTopic/ARN}}"

  ##################################
  # Notification of Account Deletion
  ##################################

  UserAccountDeletionTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: UserAccountDeletionTopic
      KmsMasterKeyId: !Ref SnsKmsKey
      TopicName: UserAccountDeletion

  UserAccountDeletionTopicPolicy:
    Condition: IsNotDevelopmentOrDemo
    Type: AWS::SNS::TopicPolicy
    Properties:
      Topics:
        - !Ref UserAccountDeletionTopic
      PolicyDocument:
        Statement:
          - Sid: "Allow IPV Core"
            Effect: Allow
            Principal:
              AWS: !Join
                - ""
                - - "arn:aws:iam::"
                  - !FindInMap [
                      IPVCoreAccounts,
                      !Ref Environment,
                      "AccountNumber",
                    ]
                  - ":root"
            Action: sns:Subscribe
            Resource:
              - !Ref UserAccountDeletionTopic
          - Sid: "Allow Credential store"
            Effect: Allow
            Principal:
              AWS: !Join
                - ""
                - - "arn:aws:iam::"
                  - !FindInMap [
                      CredentialStoreAccounts,
                      !Ref Environment,
                      "AccountNumber",
                    ]
                  - ":root"
            Action: sns:Subscribe
            Resource:
              - !Ref UserAccountDeletionTopic
          - Sid: "Allow Account Interventions Service"
            Effect: Allow
            Principal:
              AWS: !Join
                - ""
                - - "arn:aws:iam::"
                  - !FindInMap [
                      AccountInterventionsService,
                      !Ref Environment,
                      "AccountNumber",
                    ]
                  - ":root"
            Action: sns:Subscribe
            Resource:
              - !Ref UserAccountDeletionTopic
          - !If
            - "UseExternalEvents"
            - Sid: "Allow Orchestration to publish"
              Effect: Allow
              Principal:
                AWS: !Join
                  - ""
                  - - "arn:aws:iam::"
                    - !FindInMap [
                        OrchestrationAccounts,
                        !Ref Environment,
                        "AccountNumber",
                      ]
                    - ":root"
              Action: sns:Publish
              Resource:
                - !Ref UserAccountDeletionTopic
            - !Ref AWS::NoValue

  DeleteTopicArnParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Description: The ARN of the Delete Event Topic
      Name: !Sub "/${AWS::StackName}/SNS/DeleteTopic/ARN"
      Type: String
      Value: !Ref UserAccountDeletionTopic

  ################################
  # Deleting User Services Records
  ################################

  DeleteUserServicesSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !GetAtt DeleteUserServicesFunction.Arn
      Protocol: lambda
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt UserAccountDeletionTopicDeadLetterQueue.Arn
      TopicArn: !Ref UserAccountDeletionTopic

  DeleteUserServicesLambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      Principal: sns.amazonaws.com
      SourceArn:
        Ref: UserAccountDeletionTopic
      FunctionName: !GetAtt DeleteUserServicesFunction.Arn

  DeleteUserServicesFunction:
    DependsOn:
      - DeleteUserServicesFunctionLogGroup
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${Environment}-${AWS::StackName}-delete-user-services
      CodeUri: src
      PackageType: Zip
      DeadLetterQueue:
        Type: SQS
        TargetArn: !GetAtt DeleteUserServicesDeadLetterQueue.Arn
      Handler: delete-user-services.handler
      Role: !GetAtt DeleteUserServicesRole.Arn
      Environment:
        Variables:
          TABLE_NAME: !Ref UserServicesStoreTableName
          NODE_OPTIONS: --enable-source-maps
      DeploymentPreference:
        Alarms:
          - !Ref DeleteUserServicesFunctionSuccessRate
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Format: "esm"
        OutExtension:
          - .js=.mjs
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - delete-user-services.ts
        Banner:
          - js=import { createRequire } from 'module'; const require = createRequire(import.meta.url);

  DeleteUserServicesRole:
    Type: AWS::IAM::Role
    Properties:
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
        - !Ref DeleteUserServicesPolicy
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - "sts:AssumeRole"

  DeleteUserServicesPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - sqs:SendMessage
            Resource: !GetAtt DeleteUserServicesDeadLetterQueue.Arn
          - Effect: Allow
            Action:
              - dynamodb:DeleteItem
            Resource:
              - !GetAtt UserServicesStore.Arn
              - !Sub
                - "${Arn}/*"
                - Arn: !GetAtt UserServicesStore.Arn
          - Effect: Allow
            Action:
              - kms:Decrypt
              - kms:GenerateDataKey*
              - kms:ReEncrypt*
            Resource:
              - !GetAtt QueueKmsKey.Arn
              - !GetAtt DatabaseKmsKey.Arn
              - !GetAtt LoggingKmsKey.Arn
              - !GetAtt LambdaKMSKey.Arn

  DeleteUserServicesFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${Environment}-${AWS::StackName}-delete-user-services"
      RetentionInDays: 30
      KmsKeyId: !GetAtt LoggingKmsKey.Arn

  DeleteUserServicesCSLSSubscription:
    Condition: ExportLogsToSplunk
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: !Sub "{{resolve:ssm:/${Environment}/Platform/Logs/Subscription/CSLS/ARN}}"
      FilterPattern: ""
      LogGroupName: !Ref DeleteUserServicesFunctionLogGroup

  DeleteUserServicesDeadLetterQueue:
    Type: AWS::SQS::Queue
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      MessageRetentionPeriod: 1209600
      KmsMasterKeyId: !GetAtt QueueKmsKey.Arn

  UserAccountDeletionTopicDeadLetterQueue:
    Type: AWS::SQS::Queue
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      MessageRetentionPeriod: 1209600
      KmsMasterKeyId: !GetAtt QueueKmsKey.Arn

  UserAccountDeletionTopicDeadLetterQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref UserAccountDeletionTopicDeadLetterQueue
      PolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: sns.amazonaws.com
            Action: "sqs:SendMessage"
            Resource: !GetAtt UserAccountDeletionTopicDeadLetterQueue.Arn
            Condition:
              ArnEquals:
                "aws:SourceArn": !Ref UserAccountDeletionTopic

  UserAccountDeletionTopicDeadLetterQueueAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName:
        !Join [
          "-",
          [
            !Ref AWS::StackName,
            !Ref Environment,
            UserAccountDeletionTopicDeadLetterQueueAlarm,
          ],
        ]
      AlarmDescription: More than 1 user account deletion request failed in the last 5 minutes.
      Namespace: "AWS/SQS"
      MetricName: "ApproximateNumberOfMessagesVisible"
      Dimensions:
        - Name: "QueueName"
          Value: !GetAtt UserAccountDeletionTopicDeadLetterQueue.QueueName
      Statistic: "Sum"
      Period: 300
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: "GreaterThanOrEqualToThreshold"
      AlarmActions:
        - !Sub "{{resolve:ssm:/${AlertingStackName}/SNS/LowAlertNotificationTopic/ARN}}"
      ActionsEnabled: true

  DeleteDeadLetterQueueAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName:
        !Join [
          "-",
          [!Ref AWS::StackName, !Ref Environment, DeleteDeadLetterQueueAlarm],
        ]
      AlarmDescription: More than 1 request to delete a users services has failed in the last 5 minutes.
      Namespace: "AWS/SQS"
      MetricName: "ApproximateNumberOfMessagesVisible"
      Dimensions:
        - Name: "QueueName"
          Value: !GetAtt DeleteUserServicesDeadLetterQueue.QueueName
      Statistic: "Sum"
      Period: 300
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: "GreaterThanOrEqualToThreshold"
      AlarmActions:
        - !Sub "{{resolve:ssm:/${AlertingStackName}/SNS/LowAlertNotificationTopic/ARN}}"
      ActionsEnabled: true

  DeleteUserServicesDeadLetterQueueOldestMessageAgeAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName:
        !Join [
          "-",
          [
            !Ref AWS::StackName,
            !Ref Environment,
            DeleteUserServicesDeadLetterQueueOldestMessageAgeAlarm,
          ],
        ]
      MetricName: ApproximateAgeOfOldestMessage
      Namespace: AWS/SQS
      Statistic: Maximum
      Period: 300
      EvaluationPeriods: 1
      Threshold: 300
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
        - Name: QueueName
          Value: !GetAtt DeleteUserServicesDeadLetterQueue.QueueName
      AlarmActions:
        - !Sub "{{resolve:ssm:/${AlertingStackName}/SNS/LowAlertNotificationTopic/ARN}}"

  UserAccountDeletionTopicDeadLetterQueueOldestMessageAgeAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName:
        !Join [
          "-",
          [
            !Ref AWS::StackName,
            !Ref Environment,
            UserAccountDeletionTopicDeadLetterQueueOldestMessageAgeAlarm,
          ],
        ]
      MetricName: ApproximateAgeOfOldestMessage
      Namespace: AWS/SQS
      Statistic: Maximum
      Period: 300
      EvaluationPeriods: 1
      Threshold: 300
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
        - Name: QueueName
          Value: !GetAtt UserAccountDeletionTopicDeadLetterQueue.QueueName
      AlarmActions:
        - !Sub "{{resolve:ssm:/${AlertingStackName}/SNS/LowAlertNotificationTopic/ARN}}"

  DeleteUserServicesFunctionSuccessRate:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName:
        !Join [
          "-",
          [
            !Ref AWS::StackName,
            !Ref Environment,
            DeleteUserServicesFunctionSuccessRate,
          ],
        ]
      Metrics:
        - Id: errors
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Errors
              Dimensions:
                - Name: FunctionName
                  Value: !Ref DeleteUserServicesFunction
            Period: 300
            Stat: Sum
          ReturnData: false
        - Id: invocations
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Invocations
              Dimensions:
                - Name: FunctionName
                  Value: !Ref DeleteUserServicesFunction
            Period: 300
            Stat: Sum
          ReturnData: false
        - Id: successRate
          Expression: "1 - (errors / invocations)"
          Label: "Success Rate"
          ReturnData: true
      Threshold: 0.95
      ComparisonOperator: LessThanThreshold
      EvaluationPeriods: 1
      AlarmActions:
        - !Sub "{{resolve:ssm:/${AlertingStackName}/SNS/LowAlertNotificationTopic/ARN}}"

  ############################
  # Delete Email Subscriptions
  ############################

  DeleteEmailSubscriptionsSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !GetAtt DeleteEmailSubscriptionsFunction.Arn
      Protocol: lambda
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt UserAccountDeletionTopicSubscriptionDeleteEmailSubscriptionsDeadLetterQueue.Arn
      TopicArn: !Ref UserAccountDeletionTopic

  UserAccountDeletionTopicSubscriptionDeleteEmailSubscriptionsDeadLetterQueue:
    Type: AWS::SQS::Queue
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      MessageRetentionPeriod: 1209600
      KmsMasterKeyId: !GetAtt QueueKmsKey.Arn

  DeleteEmailSubscriptionsSubscriptionDeadLetterQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref UserAccountDeletionTopicSubscriptionDeleteEmailSubscriptionsDeadLetterQueue
      PolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: sns.amazonaws.com
            Action: "sqs:SendMessage"
            Resource: !GetAtt UserAccountDeletionTopicSubscriptionDeleteEmailSubscriptionsDeadLetterQueue.Arn
            Condition:
              ArnEquals:
                "aws:SourceArn": !Ref UserAccountDeletionTopic

  DeleteEmailSubscriptionsLambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      Principal: sns.amazonaws.com
      SourceArn:
        Ref: UserAccountDeletionTopic
      FunctionName: !GetAtt DeleteEmailSubscriptionsFunction.Arn

  DeleteEmailSubscriptionsFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${Environment}-${AWS::StackName}-delete-email-subscriptions
      CodeUri: src
      PackageType: Zip
      Handler: delete-email-subscriptions.handler
      Role: !GetAtt DeleteEmailSubscriptionsRole.Arn
      Timeout: 30
      EventInvokeConfig:
        DestinationConfig:
          OnFailure:
            Type: Lambda
            Destination: !GetAtt DeleteEmailSubscriptionsDeadLetterQueue.Arn
        MaximumRetryAttempts: 2
      DeadLetterQueue:
        Type: SQS
        TargetArn: !GetAtt DeleteEmailSubscriptionsDeadLetterQueue.Arn
      Environment:
        Variables:
          GOV_ACCOUNTS_PUBLISHING_API_TOKEN: !Sub "{{resolve:secretsmanager:/${AccountManagementFrontendStackName}/Config/Publishing/API/Key}}"
          GOV_ACCOUNTS_PUBLISHING_API_URL:
            !FindInMap [
              EnvironmentVariables,
              !Ref Environment,
              GOVACCOUNTSPUBLISHINGAPIURL,
            ]
          NODE_OPTIONS: --enable-source-maps
      DeploymentPreference:
        Alarms:
          - !Ref DeleteEmailSubscriptionsFunctionSuccessRate
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Format: "esm"
        OutExtension:
          - .js=.mjs
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - delete-email-subscriptions.ts
        Banner:
          - js=import { createRequire } from 'module'; const require = createRequire(import.meta.url);

  DeleteEmailSubscriptionsDeadLetterQueue:
    Type: AWS::SQS::Queue
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      MessageRetentionPeriod: 1209600
      KmsMasterKeyId: !GetAtt QueueKmsKey.Arn

  DeleteEmailSubscriptionsRole:
    Type: AWS::IAM::Role
    Properties:
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
        - !Ref DeleteEmailSubscriptionsPolicy
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - "sts:AssumeRole"

  DeleteEmailSubscriptionsPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - sqs:SendMessage
            Resource: !GetAtt DeleteEmailSubscriptionsDeadLetterQueue.Arn
          - Effect: Allow
            Action:
              - kms:Decrypt
              - kms:GenerateDataKey*
              - kms:ReEncrypt*
            Resource:
              - !GetAtt QueueKmsKey.Arn
              - !GetAtt LoggingKmsKey.Arn
              - !GetAtt LambdaKMSKey.Arn

  DeleteEmailSubscriptionsFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${DeleteEmailSubscriptionsFunction}"
      RetentionInDays: 30
      KmsKeyId: !GetAtt LoggingKmsKey.Arn

  DeleteEmailSubscriptionsCSLSSubscription:
    Condition: ExportLogsToSplunk
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: !Sub "{{resolve:ssm:/${Environment}/Platform/Logs/Subscription/CSLS/ARN}}"
      FilterPattern: ""
      LogGroupName: !Ref DeleteEmailSubscriptionsFunctionLogGroup

  ActivityLogToFormatQueue:
    Type: AWS::SQS::Queue
    Properties:
      KmsMasterKeyId: !GetAtt QueueKmsKey.Arn
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete

  UserAccountDeletionTopicSubscriptionDeleteEmailSubscriptionsDeadLetterQueueOldestMessageAgeAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName:
        !Join [
          "-",
          [
            !Ref AWS::StackName,
            !Ref Environment,
            UserAccountDeletionTopicSubscriptionDeleteEmailSubscriptionsDeadLetterQueueOldestMessageAgeAlarm,
          ],
        ]
      MetricName: ApproximateAgeOfOldestMessage
      Namespace: AWS/SQS
      Statistic: Maximum
      Period: 300
      EvaluationPeriods: 1
      Threshold: 300
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
        - Name: QueueName
          Value: !GetAtt UserAccountDeletionTopicSubscriptionDeleteEmailSubscriptionsDeadLetterQueue.QueueName
      AlarmActions:
        - !Sub "{{resolve:ssm:/${AlertingStackName}/SNS/LowAlertNotificationTopic/ARN}}"

  DeleteEmailSubscriptionsDeadLetterQueueOldestMessageAgeAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName:
        !Join [
          "-",
          [
            !Ref AWS::StackName,
            !Ref Environment,
            DeleteEmailSubscriptionsDeadLetterQueueOldestMessageAgeAlarm,
          ],
        ]
      MetricName: ApproximateAgeOfOldestMessage
      Namespace: AWS/SQS
      Statistic: Maximum
      Period: 300
      EvaluationPeriods: 1
      Threshold: 300
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
        - Name: QueueName
          Value: !GetAtt DeleteEmailSubscriptionsDeadLetterQueue.QueueName
      AlarmActions:
        - !Sub "{{resolve:ssm:/${AlertingStackName}/SNS/LowAlertNotificationTopic/ARN}}"

  ActivityLogToFormatQueueOldestMessageAgeAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName:
        !Join [
          "-",
          [
            !Ref AWS::StackName,
            !Ref Environment,
            ActivityLogToFormatQueueOldestMessageAgeAlarm,
          ],
        ]
      MetricName: ApproximateAgeOfOldestMessage
      Namespace: AWS/SQS
      Statistic: Maximum
      Period: 300
      EvaluationPeriods: 1
      Threshold: 300
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
        - Name: QueueName
          Value: !GetAtt ActivityLogToFormatQueue.QueueName
      AlarmActions:
        - !Sub "{{resolve:ssm:/${AlertingStackName}/SNS/LowAlertNotificationTopic/ARN}}"

  DeleteEmailSubscriptionsFunctionSuccessRate:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName:
        !Join [
          "-",
          [
            !Ref AWS::StackName,
            !Ref Environment,
            DeleteEmailSubscriptionsFunctionSuccessRate,
          ],
        ]
      Metrics:
        - Id: errors
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Errors
              Dimensions:
                - Name: FunctionName
                  Value: !Ref DeleteEmailSubscriptionsFunction
            Period: 300
            Stat: Sum
          ReturnData: false
        - Id: invocations
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Invocations
              Dimensions:
                - Name: FunctionName
                  Value: !Ref DeleteEmailSubscriptionsFunction
            Period: 300
            Stat: Sum
          ReturnData: false
        - Id: successRate
          Expression: "1 - (errors / invocations)"
          Label: "Success Rate"
          ReturnData: true
      Threshold: 0.95
      ComparisonOperator: LessThanThreshold
      EvaluationPeriods: 1
      AlarmActions:
        - !Sub "{{resolve:ssm:/${AlertingStackName}/SNS/LowAlertNotificationTopic/ARN}}"

  ###################
  # Write Activity Log
  ###################

  WriteActivityLogFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - WriteActivityLogFunctionLogGroup
    Properties:
      FunctionName: !Sub ${Environment}-${AWS::StackName}-write-activity-log
      CodeUri: src
      PackageType: Zip
      Timeout: 30
      Events:
        ActivityLogToWriteQueue:
          Type: SQS
          Properties:
            Queue: !GetAtt ActivityLogToWriteQueue.Arn
      DeadLetterQueue:
        Type: SQS
        TargetArn: !GetAtt WriteActivityLogDeadLetterQueue.Arn
      Handler: write-activity-log.handler
      Role: !GetAtt WriteActivityRecordRole.Arn
      Environment:
        Variables:
          TABLE_NAME: !Ref ActivityLogsStoreTableName
          GENERATOR_KEY_ARN: !GetAtt GeneratorKey.Arn
          WRAPPING_KEY_ARN: !GetAtt WrapperKey.Arn
          BACKUP_WRAPPING_KEY_ARN: !GetAtt BackupWrappingKeyArnSSM.Value
          VERIFY_ACCESS_VALUE: !Sub "{{resolve:secretsmanager:/${AWS::StackName}/Config/Storage/VerificationSecret}}"
          ACCOUNT_ID: !Sub "${AWS::AccountId}"
          ENVIRONMENT: !Ref Environment
          NODE_OPTIONS: --enable-source-maps
      DeploymentPreference:
        Alarms:
          - !Ref WriteActivityLogFunctionSuccessRate
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Format: "esm"
        OutExtension:
          - .js=.mjs
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - write-activity-log.ts
        Banner:
          - js=import { createRequire } from 'module'; const require = createRequire(import.meta.url);

  WriteActivityLogDeadLetterQueue:
    Type: AWS::SQS::Queue
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      MessageRetentionPeriod: 1209600
      KmsMasterKeyId: !GetAtt QueueKmsKey.Arn

  WriteActivityRecordRole:
    Type: AWS::IAM::Role
    Properties:
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
        - !Ref WriteActivityRecordPolicy
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - "sts:AssumeRole"

  WriteActivityRecordPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - sqs:ReceiveMessage
              - sqs:DeleteMessage
              - sqs:GetQueueAttributes
            Resource: !GetAtt ActivityLogToWriteQueue.Arn
          - Effect: Allow
            Action:
              - sqs:SendMessage
            Resource: !GetAtt WriteActivityLogDeadLetterQueue.Arn
          - Effect: Allow
            Action:
              - dynamodb:PutItem
              - dynamodb:UpdateItem
            Resource:
              - !GetAtt UserActivityLogsStore.Arn
              - !Sub
                - "${Arn}/*"
                - Arn: !GetAtt UserActivityLogsStore.Arn
          - Effect: Allow
            Action:
              - kms:Decrypt
              - kms:GenerateDataKey*
              - kms:ReEncrypt*
            Resource:
              - !GetAtt QueueKmsKey.Arn
              - !GetAtt DatabaseKmsKey.Arn
          - Effect: Allow
            Action:
              - "kms:GenerateDataKey"
            Resource:
              - !GetAtt GeneratorKey.Arn
          - Effect: Allow
            Action:
              - kms:Encrypt
            Resource:
              - !GetAtt WrapperKey.Arn
              - !GetAtt BackupWrappingKeyArnSSM.Value

  WriteActivityLogFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${Environment}-${AWS::StackName}-write-activity-log"
      RetentionInDays: 30
      KmsKeyId: !GetAtt LoggingKmsKey.Arn

  WriteActivityLogCSLSSubscription:
    Condition: ExportLogsToSplunk
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: !Sub "{{resolve:ssm:/${Environment}/Platform/Logs/Subscription/CSLS/ARN}}"
      FilterPattern: ""
      LogGroupName: !Ref WriteActivityLogFunctionLogGroup

  WriteActivityLogDeadLetterQueueAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName:
        !Join [
          "-",
          [
            !Ref AWS::StackName,
            !Ref Environment,
            WriteActivityLogDeadLetterQueueAlarm,
          ],
        ]
      AlarmDescription: More than 1 activity log write failed in the last 5 minutes.
      Namespace: "AWS/SQS"
      MetricName: "ApproximateNumberOfMessagesVisible"
      Dimensions:
        - Name: "QueueName"
          Value: !GetAtt WriteActivityLogDeadLetterQueue.QueueName
      Statistic: "Sum"
      Period: 300
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: "GreaterThanOrEqualToThreshold"
      AlarmActions:
        - !Sub "{{resolve:ssm:/${AlertingStackName}/SNS/LowAlertNotificationTopic/ARN}}"
      ActionsEnabled: true

  WriteActivityLogDeadLetterQueueOldestMessageAgeAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName:
        !Join [
          "-",
          [
            !Ref AWS::StackName,
            !Ref Environment,
            WriteActivityLogDeadLetterQueueOldestMessageAgeAlarm,
          ],
        ]
      MetricName: ApproximateAgeOfOldestMessage
      Namespace: AWS/SQS
      Statistic: Maximum
      Period: 300
      EvaluationPeriods: 1
      Threshold: 300
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
        - Name: QueueName
          Value: !GetAtt WriteActivityLogDeadLetterQueue.QueueName
      AlarmActions:
        - !Sub "{{resolve:ssm:/${AlertingStackName}/SNS/LowAlertNotificationTopic/ARN}}"

  WriteActivityLogFunctionSuccessRate:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName:
        !Join [
          "-",
          [
            !Ref AWS::StackName,
            !Ref Environment,
            WriteActivityLogFunctionSuccessRate,
          ],
        ]
      Metrics:
        - Id: errors
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Errors
              Dimensions:
                - Name: FunctionName
                  Value: !Ref DeleteEmailSubscriptionsFunction
            Period: 300
            Stat: Sum
          ReturnData: false
        - Id: invocations
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Invocations
              Dimensions:
                - Name: FunctionName
                  Value: !Ref DeleteEmailSubscriptionsFunction
            Period: 300
            Stat: Sum
          ReturnData: false
        - Id: successRate
          Expression: "1 - (errors / invocations)"
          Label: "Success Rate"
          ReturnData: true
      Threshold: 0.95
      ComparisonOperator: LessThanThreshold
      EvaluationPeriods: 1
      AlarmActions:
        - !Sub "{{resolve:ssm:/${AlertingStackName}/SNS/LowAlertNotificationTopic/ARN}}"

  #######################
  # Formatting Activity Log
  #######################

  FormatActivityLogFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - FormatActivityLogFunctionLogGroup
    Properties:
      FunctionName: !Sub ${Environment}-${AWS::StackName}-format-activity-log
      CodeUri: src
      PackageType: Zip
      Events:
        DynamoStream:
          Type: DynamoDB
          Properties:
            BatchSize: 1
            Stream: !GetAtt RawEventsStore.StreamArn
            Enabled: true
            DestinationConfig:
              OnFailure:
                Destination: !GetAtt FormatActivityLogDeadLetterQueue.Arn
            StartingPosition: LATEST
            FilterCriteria:
              Filters:
                - Pattern: '{ "eventName": ["INSERT"] }'
      DeadLetterQueue:
        Type: SQS
        TargetArn: !GetAtt FormatActivityLogDeadLetterQueue.Arn
      Handler: format-activity-log.handler
      Role: !GetAtt FormatActivityLogRole.Arn
      Environment:
        Variables:
          OUTPUT_QUEUE_URL: !Ref ActivityLogToWriteQueue
          ENVIRONMENT: !Ref Environment
          ACCOUNT_ID: !Sub "${AWS::AccountId}"
          GENERATOR_KEY_ARN: !GetAtt GeneratorKey.Arn
          WRAPPING_KEY_ARN: !GetAtt WrapperKey.Arn
          NODE_OPTIONS: --enable-source-maps
      DeploymentPreference:
        Alarms:
          - !Ref FormatActivityLogFunctionSuccessRate
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Format: "esm"
        OutExtension:
          - .js=.mjs
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - format-activity-log.ts
        Banner:
          - js=import { createRequire } from 'module'; const require = createRequire(import.meta.url);

  FormatActivityLogDeadLetterQueue:
    Type: AWS::SQS::Queue
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      MessageRetentionPeriod: 1209600
      KmsMasterKeyId: !GetAtt QueueKmsKey.Arn

  FormatActivityLogRole:
    Type: AWS::IAM::Role
    Properties:
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
        - !Ref FormatActivityLogPolicy
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - "sts:AssumeRole"

  FormatActivityLogPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - sqs:ReceiveMessage
              - sqs:DeleteMessage
              - sqs:GetQueueAttributes
            Resource: !GetAtt ActivityLogToFormatQueue.Arn
          - Effect: Allow
            Action:
              - sqs:SendMessage
            Resource: !GetAtt FormatActivityLogDeadLetterQueue.Arn
          - Effect: Allow
            Action:
              - sqs:SendMessage
            Resource: !GetAtt ActivityLogToWriteQueue.Arn
          - Effect: Allow
            Action:
              - dynamodb:DescribeStream
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:ListStreams
            Resource:
              - !GetAtt RawEventsStore.StreamArn
              - !Sub
                - "${Arn}/*"
                - Arn: !GetAtt RawEventsStore.StreamArn
          - Effect: Allow
            Action:
              - kms:Decrypt
              - kms:GenerateDataKey*
              - kms:ReEncrypt*
            Resource:
              - !GetAtt QueueKmsKey.Arn
              - !GetAtt DatabaseKmsKey.Arn
          - Effect: Allow
            Action:
              - kms:Decrypt
            Resource:
              - !GetAtt WrapperKey.Arn
              - !GetAtt GeneratorKey.Arn

  FormatActivityLogFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${Environment}-${AWS::StackName}-format-activity-log"
      RetentionInDays: 30
      KmsKeyId: !GetAtt LoggingKmsKey.Arn

  FormatActivityLogCSLSSubscription:
    Condition: ExportLogsToSplunk
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: !Sub "{{resolve:ssm:/${Environment}/Platform/Logs/Subscription/CSLS/ARN}}"
      FilterPattern: ""
      LogGroupName: !Ref FormatActivityLogFunctionLogGroup

  ActivityLogToWriteQueue:
    Type: AWS::SQS::Queue
    Properties:
      KmsMasterKeyId: !GetAtt QueueKmsKey.Arn
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete

  FormatActivityLogDeadLetterQueueAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName:
        !Join [
          "-",
          [
            !Ref AWS::StackName,
            !Ref Environment,
            FormatActivityLogDeadLetterQueueAlarm,
          ],
        ]
      AlarmDescription: More than 1 activity log failed to be formatted in the last 5 minutes.
      Namespace: "AWS/SQS"
      MetricName: "ApproximateNumberOfMessagesVisible"
      Dimensions:
        - Name: "QueueName"
          Value: !GetAtt FormatActivityLogDeadLetterQueue.QueueName
      Statistic: "Sum"
      Period: 300
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: "GreaterThanOrEqualToThreshold"
      AlarmActions:
        - !Sub "{{resolve:ssm:/${AlertingStackName}/SNS/LowAlertNotificationTopic/ARN}}"
      ActionsEnabled: true

  FormatActivityLogDeadLetterQueueOldestMessageAgeAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName:
        !Join [
          "-",
          [
            !Ref AWS::StackName,
            !Ref Environment,
            FormatActivityLogDeadLetterQueueOldestMessageAgeAlarm,
          ],
        ]
      MetricName: ApproximateAgeOfOldestMessage
      Namespace: AWS/SQS
      Statistic: Maximum
      Period: 300
      EvaluationPeriods: 1
      Threshold: 300
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
        - Name: QueueName
          Value: !GetAtt FormatActivityLogDeadLetterQueue.QueueName
      AlarmActions:
        - !Sub "{{resolve:ssm:/${AlertingStackName}/SNS/LowAlertNotificationTopic/ARN}}"

  ActivityLogToWriteQueueOldestMessageAgeAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName:
        !Join [
          "-",
          [
            !Ref AWS::StackName,
            !Ref Environment,
            ActivityLogToWriteQueueOldestMessageAgeAlarm,
          ],
        ]
      MetricName: ApproximateAgeOfOldestMessage
      Namespace: AWS/SQS
      Statistic: Maximum
      Period: 300
      EvaluationPeriods: 1
      Threshold: 300
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
        - Name: QueueName
          Value: !GetAtt ActivityLogToWriteQueue.QueueName
      AlarmActions:
        - !Sub "{{resolve:ssm:/${AlertingStackName}/SNS/LowAlertNotificationTopic/ARN}}"

  FormatActivityLogFunctionSuccessRate:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName:
        !Join [
          "-",
          [
            !Ref AWS::StackName,
            !Ref Environment,
            FormatActivityLogFunctionSuccessRate,
          ],
        ]
      Metrics:
        - Id: errors
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Errors
              Dimensions:
                - Name: FunctionName
                  Value: !Ref FormatActivityLogFunction
            Period: 300
            Stat: Sum
          ReturnData: false
        - Id: invocations
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Invocations
              Dimensions:
                - Name: FunctionName
                  Value: !Ref FormatActivityLogFunction
            Period: 300
            Stat: Sum
          ReturnData: false
        - Id: successRate
          Expression: "1 - (errors / invocations)"
          Label: "Success Rate"
          ReturnData: true
      Threshold: 0.95
      ComparisonOperator: LessThanThreshold
      EvaluationPeriods: 1
      AlarmActions:
        - !Sub "{{resolve:ssm:/${AlertingStackName}/SNS/LowAlertNotificationTopic/ARN}}"

  ################################
  # Deleting Activity Log Records
  ################################

  DeleteActivityLogSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !GetAtt DeleteActivityLogFunction.Arn
      Protocol: lambda
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt DeleteActivityLogSubscriptionDeadLetterQueue.Arn
      TopicArn: !Ref UserAccountDeletionTopic

  DeleteActivityLogSubscriptionDeadLetterQueue:
    Type: AWS::SQS::Queue
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      MessageRetentionPeriod: 1209600
      KmsMasterKeyId: !GetAtt QueueKmsKey.Arn

  DeleteActivityLogSubscriptionDeadLetterQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref DeleteActivityLogSubscriptionDeadLetterQueue
      PolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: sns.amazonaws.com
            Action: "sqs:SendMessage"
            Resource: !GetAtt DeleteActivityLogSubscriptionDeadLetterQueue.Arn
            Condition:
              ArnEquals:
                "aws:SourceArn": !Ref UserAccountDeletionTopic

  DeleteActivityLogSubscriptionDeadLetterQueueAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName:
        !Join [
          "-",
          [
            !Ref AWS::StackName,
            !Ref Environment,
            DeleteActivityLogSubscriptionDeadLetterQueue,
          ],
        ]
      AlarmDescription: More than 1 deletion of activity log failed in the last 5 minutes.
      Namespace: "AWS/SQS"
      MetricName: "ApproximateNumberOfMessagesVisible"
      Dimensions:
        - Name: "QueueName"
          Value: !GetAtt DeleteActivityLogSubscriptionDeadLetterQueue.QueueName
      Statistic: "Sum"
      Period: 300
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: "GreaterThanOrEqualToThreshold"
      AlarmActions:
        - !Sub "{{resolve:ssm:/${AlertingStackName}/SNS/LowAlertNotificationTopic/ARN}}"
      ActionsEnabled: true

  DeleteActivityLogFunction:
    DependsOn:
      - DeleteActivityLogFunctionLogGroup
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${Environment}-${AWS::StackName}-delete-activity-log
      CodeUri: src
      PackageType: Zip
      DeadLetterQueue:
        Type: SQS
        TargetArn: !GetAtt DeleteActivityLogDeadLetterQueue.Arn
      Handler: delete-activity-log.handler
      Role: !GetAtt DeleteActivityLogRole.Arn
      Environment:
        Variables:
          TABLE_NAME: !Ref ActivityLogsStoreTableName
          NODE_OPTIONS: --enable-source-maps
      DeploymentPreference:
        Alarms:
          - !Ref DeleteActivityLogFunctionSuccessRate
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Format: "esm"
        OutExtension:
          - .js=.mjs
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - delete-activity-log.ts
        Banner:
          - js=import { createRequire } from 'module'; const require = createRequire(import.meta.url);

  DeleteActivityLogRole:
    Type: AWS::IAM::Role
    Properties:
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
        - !Ref DeleteActivityLogPolicy
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - "sts:AssumeRole"

  DeleteActivityLogPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - sqs:SendMessage
            Resource: !GetAtt DeleteActivityLogDeadLetterQueue.Arn
          - Effect: Allow
            Action:
              - dynamodb:DeleteItem
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:BatchWriteItem
            Resource:
              - !GetAtt UserActivityLogsStore.Arn
              - !Sub
                - "${Arn}/*"
                - Arn: !GetAtt UserActivityLogsStore.Arn
          - Effect: Allow
            Action:
              - kms:Decrypt
              - kms:GenerateDataKey*
              - kms:ReEncrypt*
            Resource:
              - !GetAtt QueueKmsKey.Arn
              - !GetAtt DatabaseKmsKey.Arn
              - !GetAtt LoggingKmsKey.Arn
              - !GetAtt LambdaKMSKey.Arn

  DeleteActivityLogLambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      Principal: sns.amazonaws.com
      SourceArn:
        Ref: UserAccountDeletionTopic
      FunctionName: !GetAtt DeleteActivityLogFunction.Arn

  DeleteActivityLogFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${Environment}-${AWS::StackName}-delete-activity-log"
      RetentionInDays: 30
      KmsKeyId: !GetAtt LoggingKmsKey.Arn

  DeleteActivityLogCSLSSubscription:
    Condition: ExportLogsToSplunk
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: !Sub "{{resolve:ssm:/${Environment}/Platform/Logs/Subscription/CSLS/ARN}}"
      FilterPattern: ""
      LogGroupName: !Ref DeleteActivityLogFunctionLogGroup

  DeleteActivityLogDeadLetterQueue:
    Type: AWS::SQS::Queue
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      MessageRetentionPeriod: 1209600
      KmsMasterKeyId: !GetAtt QueueKmsKey.Arn

  DeleteActivityLogDeadLetterQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref DeleteActivityLogDeadLetterQueue
      PolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: sns.amazonaws.com
            Action: "sqs:SendMessage"
            Resource: !GetAtt DeleteActivityLogDeadLetterQueue.Arn
            Condition:
              ArnEquals:
                "aws:SourceArn": !Ref UserAccountDeletionTopic

  DeleteActivityLogDeadLetterQueueAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName:
        !Join [
          "-",
          [
            !Ref AWS::StackName,
            !Ref Environment,
            DeleteActivityLogDeadLetterQueueAlarm,
          ],
        ]
      AlarmDescription: More than 1 activity log failed to be deleted in the last 5 minutes.
      Namespace: "AWS/SQS"
      MetricName: "ApproximateNumberOfMessagesVisible"
      Dimensions:
        - Name: "QueueName"
          Value: !GetAtt DeleteActivityLogDeadLetterQueue.QueueName
      Statistic: "Sum"
      Period: 300
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: "GreaterThanOrEqualToThreshold"
      AlarmActions:
        - !Sub "{{resolve:ssm:/${AlertingStackName}/SNS/LowAlertNotificationTopic/ARN}}"
      ActionsEnabled: true

  DeleteActivityLogSubscriptionDeadLetterQueueOldestMessageAgeAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName:
        !Join [
          "-",
          [
            !Ref AWS::StackName,
            !Ref Environment,
            DeleteActivityLogSubscriptionDeadLetterQueueOldestMessageAgeAlarm,
          ],
        ]
      MetricName: ApproximateAgeOfOldestMessage
      Namespace: AWS/SQS
      Statistic: Maximum
      Period: 300
      EvaluationPeriods: 1
      Threshold: 300
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
        - Name: QueueName
          Value: !GetAtt DeleteActivityLogSubscriptionDeadLetterQueue.QueueName
      AlarmActions:
        - !Sub "{{resolve:ssm:/${AlertingStackName}/SNS/LowAlertNotificationTopic/ARN}}"

  DeleteActivityLogDeadLetterQueueOldestMessageAgeAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName:
        !Join [
          "-",
          [
            !Ref AWS::StackName,
            !Ref Environment,
            DeleteActivityLogDeadLetterQueueOldestMessageAgeAlarm,
          ],
        ]
      MetricName: ApproximateAgeOfOldestMessage
      Namespace: AWS/SQS
      Statistic: Maximum
      Period: 300
      EvaluationPeriods: 1
      Threshold: 300
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
        - Name: QueueName
          Value: !GetAtt DeleteActivityLogDeadLetterQueue.QueueName
      AlarmActions:
        - !Sub "{{resolve:ssm:/${AlertingStackName}/SNS/LowAlertNotificationTopic/ARN}}"

  DeleteActivityLogFunctionSuccessRate:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName:
        !Join [
          "-",
          [
            !Ref AWS::StackName,
            !Ref Environment,
            DeleteActivityLogFunctionSuccessRate,
          ],
        ]
      Metrics:
        - Id: errors
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Errors
              Dimensions:
                - Name: FunctionName
                  Value: !Ref DeleteActivityLogFunction
            Period: 300
            Stat: Sum
          ReturnData: false
        - Id: invocations
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Invocations
              Dimensions:
                - Name: FunctionName
                  Value: !Ref DeleteActivityLogFunction
            Period: 300
            Stat: Sum
          ReturnData: false
        - Id: successRate
          Expression: "1 - (errors / invocations)"
          Label: "Success Rate"
          ReturnData: true
      Threshold: 0.95
      ComparisonOperator: LessThanThreshold
      EvaluationPeriods: 1
      AlarmActions:
        - !Sub "{{resolve:ssm:/${AlertingStackName}/SNS/LowAlertNotificationTopic/ARN}}"

  ######################
  # Mark Suspicious Activity as Reported
  ######################

  MarkActivityReportedFunction:
    DependsOn:
      - MarkActivityReportedLogGroup
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${Environment}-${AWS::StackName}-mark-activity-reported
      CodeUri: src
      Handler: mark-activity-reported.handler
      PackageType: Zip
      Role: !GetAtt MarkActivityReportedRole.Arn
      Environment:
        Variables:
          ACTIVITY_LOG_TABLE_NAME: !Ref ActivityLogsStoreTableName
          GENERATOR_KEY_ARN: !GetAtt GeneratorKey.Arn
          WRAPPING_KEY_ARN: !GetAtt WrapperKey.Arn
          VERIFY_ACCESS_VALUE: !Sub "{{resolve:secretsmanager:/${AWS::StackName}/Config/Storage/VerificationSecret}}"
          ACCOUNT_ID: !Sub "${AWS::AccountId}"
          ENVIRONMENT: !Ref Environment
          NODE_OPTIONS: --enable-source-maps
      DeploymentPreference:
        Alarms:
          - !Ref MarkActivityReportedFunctionSuccessRate
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Format: "esm"
        OutExtension:
          - .js=.mjs
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - mark-activity-reported.ts
        Banner:
          - js=import { createRequire } from 'module'; const require = createRequire(import.meta.url);

  MarkActivityReportedRole:
    Type: AWS::IAM::Role
    Properties:
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
        - !Ref MarkActivityReportedPolicy
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - "sts:AssumeRole"

  MarkActivityReportedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - kms:Decrypt
              - kms:GenerateDataKey*
            Resource:
              - !GetAtt DatabaseKmsKey.Arn
              - !GetAtt WrapperKey.Arn
              - !GetAtt GeneratorKey.Arn
          - Effect: Allow
            Action:
              - dynamodb:UpdateItem
              - dynamodb:Query
            Resource:
              - !GetAtt UserActivityLogsStore.Arn
              - !Sub
                - "${Arn}/*"
                - Arn: !GetAtt UserActivityLogsStore.Arn

  MarkActivityReportedInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      Principal: sns.amazonaws.com
      SourceArn:
        Ref: SuspiciousActivityTopic
      FunctionName: !GetAtt MarkActivityReportedFunction.Arn

  MarkActivityReportedLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${Environment}-${AWS::StackName}-mark-activity-reported"
      RetentionInDays: 30
      KmsKeyId: !GetAtt LoggingKmsKey.Arn

  MarkActivityReportedFunctionSuccessRate:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName:
        !Join [
          "-",
          [
            !Ref AWS::StackName,
            !Ref Environment,
            MarkActivityReportedFunctionSuccessRate,
          ],
        ]
      Metrics:
        - Id: errors
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Errors
              Dimensions:
                - Name: FunctionName
                  Value: !Ref MarkActivityReportedFunction
            Period: 300
            Stat: Sum
          ReturnData: false
        - Id: invocations
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Invocations
              Dimensions:
                - Name: FunctionName
                  Value: !Ref MarkActivityReportedFunction
            Period: 300
            Stat: Sum
          ReturnData: false
        - Id: successRate
          Expression: "1 - (errors / invocations)"
          Label: "Success Rate"
          ReturnData: true
      Threshold: 0.95
      ComparisonOperator: LessThanThreshold
      EvaluationPeriods: 1
      AlarmActions:
        - !Sub "{{resolve:ssm:/${AlertingStackName}/SNS/LowAlertNotificationTopic/ARN}}"

  ######################
  # Send Suspicious Activity to TxMA
  ######################
  SendSuspiciousActivityFunction:
    DependsOn:
      - SendSuspiciousActivityFunctionLogGroup
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${Environment}-${AWS::StackName}-send-suspicious-activity
      CodeUri: src
      Handler: send-suspicious-activity.handler
      PackageType: Zip
      Role: !GetAtt SendSuspiciousActivityRole.Arn
      Environment:
        Variables:
          EVENT_NAME: HOME_REPORT_SUSPICIOUS_ACTIVITY
          TXMA_QUEUE_URL: !Ref AuditOutputQueue
          NODE_OPTIONS: --enable-source-maps
      DeploymentPreference:
        Alarms:
          - !Ref SendSuspiciousActivityFunctionSuccessRate
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Format: "esm"
        OutExtension:
          - .js=.mjs
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - send-suspicious-activity.ts
        Banner:
          - js=import { createRequire } from 'module'; const require = createRequire(import.meta.url);

  SendSuspiciousActivityRole:
    Type: AWS::IAM::Role
    Properties:
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
        - !Ref SendSuspiciousActivityPolicy
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - "sts:AssumeRole"

  SendSuspiciousActivityPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - sqs:SendMessage
            Resource:
              - !GetAtt AuditOutputQueue.Arn
          - Effect: Allow
            Action:
              - kms:Decrypt
              - kms:GenerateDataKey*
              - kms:ReEncrypt*
            Resource:
              - !GetAtt QueueKmsKey.Arn
              - !GetAtt LoggingKmsKey.Arn
              - !GetAtt LambdaKMSKey.Arn
              - !GetAtt AuditEncryptionKey.Arn

  SendSuspiciousActivityLambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      Principal: sns.amazonaws.com
      SourceArn:
        Ref: SuspiciousActivityTopic
      FunctionName: !GetAtt SendSuspiciousActivityFunction.Arn

  SendSuspiciousActivityFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${Environment}-${AWS::StackName}-send-suspicious-activity"
      RetentionInDays: 30
      KmsKeyId: !GetAtt LoggingKmsKey.Arn

  SendSuspiciousActivityToTxMACSLSSubscription:
    Condition: ExportLogsToSplunk
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: !Sub "{{resolve:ssm:/${Environment}/Platform/Logs/Subscription/CSLS/ARN}}"
      FilterPattern: ""
      LogGroupName: !Ref SendSuspiciousActivityFunctionLogGroup

  SendSuspiciousActivityFunctionSuccessRate:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName:
        !Join [
          "-",
          [
            !Ref AWS::StackName,
            !Ref Environment,
            SendSuspiciousActivityFunctionSuccessRate,
          ],
        ]
      Metrics:
        - Id: errors
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Errors
              Dimensions:
                - Name: FunctionName
                  Value: !Ref SendSuspiciousActivityFunction
            Period: 300
            Stat: Sum
          ReturnData: false
        - Id: invocations
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Invocations
              Dimensions:
                - Name: FunctionName
                  Value: !Ref SendSuspiciousActivityFunction
            Period: 300
            Stat: Sum
          ReturnData: false
        - Id: successRate
          Expression: "1 - (errors / invocations)"
          Label: "Success Rate"
          ReturnData: true
      Threshold: 0.95
      ComparisonOperator: LessThanThreshold
      EvaluationPeriods: 1
      AlarmActions:
        - !Sub "{{resolve:ssm:/${AlertingStackName}/SNS/LowAlertNotificationTopic/ARN}}"

  ######################
  # Send confirmation for suspicious activity
  ######################

  SendConfEmailFunction:
    DependsOn:
      - SendConfEmailFunctionLogGroup
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${Environment}-${AWS::StackName}-send-conf-email
      CodeUri: src
      Handler: send-conf-email.handler
      PackageType: Zip
      Role: !GetAtt SendConfEmailRole.Arn
      Environment:
        Variables:
          NOTIFY_API_KEY: /account-mgmt-backend/notify-api-key
          TEMPLATE_ID:
            !FindInMap [
              EnvironmentVariables,
              !Ref Environment,
              REPORTSUSPISCIOUSACTIVITYTEMPLATEID,
            ]
          ENVIRONMENT_NAME: !Ref Environment
          NODE_OPTIONS: --enable-source-maps
      DeploymentPreference:
        Alarms:
          - !Ref SendConfEmailFunctionSuccessRate
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Format: "esm"
        OutExtension:
          - .js=.mjs
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - send-conf-email.ts
        Banner:
          - js=import { createRequire } from 'module'; const require = createRequire(import.meta.url);

  SendConfEmailRole:
    Type: AWS::IAM::Role
    Properties:
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
        - !Ref SendConfEmailPolicy
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - "sts:AssumeRole"

  SendConfEmailPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - "kms:Decrypt"
              - "kms:GenerateDataKey"
            Resource:
              - !GetAtt SecretsKmsKey.Arn
          - Effect: Allow
            Action: secretsmanager:GetSecretValue # pragma: allowlist secret
            Resource:
              - !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  notifyApiKeySecretArn,
                ]

  SendConfEmailLambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      Principal: sns.amazonaws.com
      SourceArn:
        Ref: SuspiciousActivityTopic
      FunctionName: !GetAtt SendConfEmailFunction.Arn

  SendConfEmailFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${Environment}-${AWS::StackName}-send-conf-email"
      RetentionInDays: 30
      KmsKeyId: !GetAtt LoggingKmsKey.Arn

  SendConfEmailToTxMACSLSSubscription:
    Condition: ExportLogsToSplunk
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: !Sub "{{resolve:ssm:/${Environment}/Platform/Logs/Subscription/CSLS/ARN}}"
      FilterPattern: ""
      LogGroupName: !Ref SendConfEmailFunctionLogGroup

  SendConfEmailFunctionSuccessRate:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName:
        !Join [
          "-",
          [
            !Ref AWS::StackName,
            !Ref Environment,
            SendConfEmailFunctionSuccessRate,
          ],
        ]
      Metrics:
        - Id: errors
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Errors
              Dimensions:
                - Name: FunctionName
                  Value: !Ref SendConfEmailFunction
            Period: 300
            Stat: Sum
          ReturnData: false
        - Id: invocations
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Invocations
              Dimensions:
                - Name: FunctionName
                  Value: !Ref SendConfEmailFunction
            Period: 300
            Stat: Sum
          ReturnData: false
        - Id: successRate
          Expression: "1 - (errors / invocations)"
          Label: "Success Rate"
          ReturnData: true
      Threshold: 0.95
      ComparisonOperator: LessThanThreshold
      EvaluationPeriods: 1
      AlarmActions:
        - !Sub "{{resolve:ssm:/${AlertingStackName}/SNS/LowAlertNotificationTopic/ARN}}"

  ######################
  # Create ticket for suspicious activity
  ######################

  CreateSupportTicketFunction:
    DependsOn:
      - CreateSupportTicketFunctionLogGroup
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${Environment}-${AWS::StackName}-create-support-ticket
      CodeUri: src
      Handler: create-support-ticket.handler
      PackageType: Zip
      Role: !GetAtt CreateSupportTicketRole.Arn
      Environment:
        Variables:
          ZENDESK_GROUP_ID_KEY: /account-mgmt-backend/zendesk-group-id-token
          ZENDESK_TAGS_KEY: /account-mgmt-backend/zendesk-tags-key
          ZENDESK_API_TOKEN_KEY: /account-mgmt-backend/zendesk-api-token
          ZENDESK_API_USER_KEY: /account-mgmt-backend/zendesk-api-user-key
          ZENDESK_API_URL_KEY: /account-mgmt-backend/zendesk-api-url-key
          ZENDESK_TICKET_FORM_ID: /account-mgmt-backend/zendesk-ticket-form-id-key
          ACTIVITY_LOG_TABLE: !Ref ActivityLogsStoreTableName
          NODE_OPTIONS: --enable-source-maps
      DeploymentPreference:
        Alarms:
          - !Ref CreateSupportTicketFunctionSuccessRate
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Format: "esm"
        OutExtension:
          - .js=.mjs
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - create-support-ticket.ts
        Banner:
          - js=import { createRequire } from 'module'; const require = createRequire(import.meta.url);

  CreateSupportTicketRole:
    Type: AWS::IAM::Role
    Properties:
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
        - !Ref CreateSupportTicketPolicy
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - "sts:AssumeRole"

  CreateSupportTicketPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - kms:Decrypt
              - kms:GenerateDataKey*
              - kms:ReEncrypt*
            Resource:
              - !GetAtt QueueKmsKey.Arn
              - !GetAtt LoggingKmsKey.Arn
              - !GetAtt LambdaKMSKey.Arn
              - !GetAtt AuditEncryptionKey.Arn
              - !GetAtt DatabaseKmsKey.Arn
          - Effect: Allow
            Action:
              - dynamodb:UpdateItem
              - dynamodb:Query
            Resource:
              - !GetAtt UserActivityLogsStore.Arn
              - !Sub
                - "${Arn}/*"
                - Arn: !GetAtt UserActivityLogsStore.Arn
          - Effect: Allow
            Action:
              - "kms:Decrypt"
              - "kms:GenerateDataKey"
            Resource:
              - !GetAtt SecretsKmsKey.Arn
          - Effect: Allow
            Action: secretsmanager:GetSecretValue # pragma: allowlist secret
            Resource:
              - !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  zendeskGroupIdSecretArn,
                ]
              - !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  zendeskTagsSecretArn,
                ]
              - !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  zendeskApiTokenSecretArn,
                ]
              - !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  zendeskApiUserSecretArn,
                ]
              - !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  zendeskApiUrlSecretArn,
                ]
              - !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  zendeskTicketFormIdSecretArn,
                ]

  CreateSupportTicketLambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      Principal: sns.amazonaws.com
      SourceArn:
        Ref: SuspiciousActivityTopic
      FunctionName: !GetAtt CreateSupportTicketFunction.Arn

  CreateSupportTicketFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${Environment}-${AWS::StackName}-create-support-ticket"
      RetentionInDays: 30
      KmsKeyId: !GetAtt LoggingKmsKey.Arn

  CreateSupportTicketToTxMACSLSSubscription:
    Condition: ExportLogsToSplunk
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: !Sub "{{resolve:ssm:/${Environment}/Platform/Logs/Subscription/CSLS/ARN}}"
      FilterPattern: ""
      LogGroupName: !Ref CreateSupportTicketFunctionLogGroup

  CreateSupportTicketFunctionSuccessRate:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName:
        !Join [
          "-",
          [
            !Ref AWS::StackName,
            !Ref Environment,
            CreateSupportTicketFunctionSuccessRate,
          ],
        ]
      Metrics:
        - Id: errors
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Errors
              Dimensions:
                - Name: FunctionName
                  Value: !Ref CreateSupportTicketFunction
            Period: 300
            Stat: Sum
          ReturnData: false
        - Id: invocations
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Invocations
              Dimensions:
                - Name: FunctionName
                  Value: !Ref CreateSupportTicketFunction
            Period: 300
            Stat: Sum
          ReturnData: false
        - Id: successRate
          Expression: "1 - (errors / invocations)"
          Label: "Success Rate"
          ReturnData: true
      Threshold: 0.95
      ComparisonOperator: LessThanThreshold
      EvaluationPeriods: 1
      AlarmActions:
        - !Sub "{{resolve:ssm:/${AlertingStackName}/SNS/LowAlertNotificationTopic/ARN}}"

  ######################
  # Trigger Report Suspicious Activity Step Function
  ######################

  TriggerSuspiciousActivityStepSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !GetAtt TriggerSuspiciousActivityStepFunction.Arn
      Protocol: lambda
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt TriggerSuspiciousActivityStepDeadLetterQueue.Arn
      TopicArn: !Ref SuspiciousActivityTopic

  TriggerSuspiciousActivityStepDeadLetterQueue:
    Type: AWS::SQS::Queue
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      MessageRetentionPeriod: 1209600
      KmsMasterKeyId: !GetAtt QueueKmsKey.Arn

  TriggerSuspiciousActivityStepDeadLetterQueueAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName:
        !Join [
          "-",
          [
            !Ref AWS::StackName,
            !Ref Environment,
            TriggerSuspiciousActivityStepDeadLetterQueue,
          ],
        ]
      AlarmDescription: More than 10 suspicious activity report StepFunctions have failed to be triggered in the last 5 minutes.
      Namespace: "AWS/SQS"
      MetricName: "ApproximateNumberOfMessagesVisible"
      Dimensions:
        - Name: "QueueName"
          Value: !GetAtt TriggerSuspiciousActivityStepDeadLetterQueue.QueueName
      Statistic: "Sum"
      Period: 300
      EvaluationPeriods: 1
      Threshold: 10
      ComparisonOperator: "GreaterThanOrEqualToThreshold"
      AlarmActions:
        - !Sub "{{resolve:ssm:/${AlertingStackName}/SNS/HighAlertNotificationTopic/ARN}}"
      ActionsEnabled: true

  TriggerSuspiciousActivityStepFunctionLambdaExecutionRetryAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: TriggerSuspiciousActivityStepFunctionLambdaExecutionRetry
      AlarmDescription: More than 10 retries of the lambda that starts the report suspicious activity StepFunction have been attempted in the last 5 minutes.
      Namespace: AWS/States
      MetricName: RetryAttempts
      Dimensions:
        - Name: StateMachineArn
          Value: !Ref ReportSuspiciousActivityStepFunction
      ComparisonOperator: GreaterThanThreshold
      Statistic: Sum
      Period: 300
      Threshold: 10
      EvaluationPeriods: 1
      AlarmActions:
        - !Sub "{{resolve:ssm:/${AlertingStackName}/SNS/HighAlertNotificationTopic/ARN}}"

  TriggerSuspiciousActivityStepFunction:
    DependsOn:
      - TriggerSuspiciousActivityStepFunctionLogGroup
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${Environment}-${AWS::StackName}-trigger-step
      CodeUri: src
      DeadLetterQueue:
        Type: SQS
        TargetArn: !GetAtt TriggerSuspiciousActivityStepDeadLetterQueue.Arn
      Handler: trigger-rsa-step.handler
      PackageType: Zip
      Role: !GetAtt TriggerSuspiciousActivityStepRole.Arn
      Environment:
        Variables:
          STATE_MACHINE_ARN: !Ref ReportSuspiciousActivityStepFunction
          STEP_FUNCTION_ALIAS: "latest"
          NODE_OPTIONS: --enable-source-maps
      DeploymentPreference:
        Alarms:
          - !Ref TriggerSuspiciousActivityStepFunctionSuccessRate
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Format: "esm"
        OutExtension:
          - .js=.mjs
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - trigger-rsa-step.ts
        Banner:
          - js=import { createRequire } from 'module'; const require = createRequire(import.meta.url);

  TriggerSuspiciousActivityStepRole:
    Type: AWS::IAM::Role
    Properties:
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
        - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess
        - !Ref TriggerSuspiciousActivityStepPolicy
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - "sts:AssumeRole"

  TriggerSuspiciousActivityStepPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - sqs:SendMessage
            Resource: !GetAtt TriggerSuspiciousActivityStepDeadLetterQueue.Arn
          - Effect: Allow
            Action:
              - "kms:Decrypt"
              - "kms:GenerateDataKey"
            Resource:
              - !GetAtt SecretsKmsKey.Arn
          - Effect: Allow
            Action:
              - "states:StartExecution"
            Resource:
              - !GetAtt ReportSuspiciousActivityStepFunction.Arn

  TriggerSuspiciousActivityStepLambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      Principal: sns.amazonaws.com
      SourceArn:
        Ref: SuspiciousActivityTopic
      FunctionName: !GetAtt TriggerSuspiciousActivityStepFunction.Arn

  TriggerSuspiciousActivityStepFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${Environment}-${AWS::StackName}-trigger-rsa"
      RetentionInDays: 30
      KmsKeyId: !GetAtt LoggingKmsKey.Arn

  TriggerSuspiciousActivityStepToTxMACSLSSubscription:
    Condition: ExportLogsToSplunk
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: !Sub "{{resolve:ssm:/${Environment}/Platform/Logs/Subscription/CSLS/ARN}}"
      FilterPattern: ""
      LogGroupName: !Ref TriggerSuspiciousActivityStepFunctionLogGroup

  TriggerSuspiciousActivityStepDeadLetterQueueOldestMessageAgeAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName:
        !Join [
          "-",
          [
            !Ref AWS::StackName,
            !Ref Environment,
            TriggerSuspiciousActivityStepDeadLetterQueueOldestMessageAgeAlarm,
          ],
        ]
      MetricName: ApproximateAgeOfOldestMessage
      Namespace: AWS/SQS
      Statistic: Maximum
      Period: 300
      EvaluationPeriods: 1
      Threshold: 300
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
        - Name: QueueName
          Value: !GetAtt TriggerSuspiciousActivityStepDeadLetterQueue.QueueName
      AlarmActions:
        - !Sub "{{resolve:ssm:/${AlertingStackName}/SNS/LowAlertNotificationTopic/ARN}}"

  TriggerSuspiciousActivityStepFunctionSuccessRate:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName:
        !Join [
          "-",
          [
            !Ref AWS::StackName,
            !Ref Environment,
            TriggerSuspiciousActivityStepFunctionSuccessRate,
          ],
        ]
      Metrics:
        - Id: errors
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Errors
              Dimensions:
                - Name: FunctionName
                  Value: !Ref TriggerSuspiciousActivityStepFunction
            Period: 300
            Stat: Sum
          ReturnData: false
        - Id: invocations
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Invocations
              Dimensions:
                - Name: FunctionName
                  Value: !Ref TriggerSuspiciousActivityStepFunction
            Period: 300
            Stat: Sum
          ReturnData: false
        - Id: successRate
          Expression: "1 - (errors / invocations)"
          Label: "Success Rate"
          ReturnData: true
      Threshold: 0.95
      ComparisonOperator: LessThanThreshold
      EvaluationPeriods: 1
      AlarmActions:
        - !Sub "{{resolve:ssm:/${AlertingStackName}/SNS/LowAlertNotificationTopic/ARN}}"

  ######################
  # Report Suspicious Activity Step Function
  ######################

  ReportSuspiciousActivityStepFunction:
    Type: AWS::Serverless::StateMachine
    Properties:
      Name: !Sub "${AWS::StackName}-ReportSuspiciousActivityStepFunction"
      DefinitionUri: report-suspicious-activity-asl.json
      DefinitionSubstitutions:
        ACTIVITY_LOG_TABLE_NAME: !Ref ActivityLogsStoreTableName
        MarkActivityReportedFunctionName: !Ref MarkActivityReportedFunction
        CreateZendeskTicketFunctionName: !Ref CreateSupportTicketFunction
        SendAcknowledgeFunctionName: !Ref SendConfEmailFunction
        SendToTxMAFunctionName: !Ref SendSuspiciousActivityFunction
      Role: !GetAtt ReportSuspiciousActivityStepFunctionRole.Arn
      Logging:
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt ReportSuspiciousActivityStepFunctionLogGroup.Arn
        Level: "ALL"
        IncludeExecutionData: false
      Tracing:
        Enabled: true
      Tags:
        Product: !Ref ProductTagValue
        System: !Ref SystemTagValue
        Environment: !Ref Environment
        Owner: !Ref OwnerTagValue
        Source: !Ref SourceTagValue
    DependsOn: ReportSuspiciousActivityStepFunctionPolicy

  ReportSuspiciousActivityStepFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: !Sub "states.${AWS::Region}.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Tags:
        - Key: Product
          Value: !Ref ProductTagValue
        - Key: System
          Value: !Ref SystemTagValue
        - Key: Environment
          Value: !Ref Environment
        - Key: Owner
          Value: !Ref OwnerTagValue
        - Key: Source
          Value: !Ref SourceTagValue

  ReportSuspiciousActivityStepFunctionPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - "lambda:InvokeFunction"
            Resource:
              - !GetAtt CreateSupportTicketFunction.Arn
              - !GetAtt SendConfEmailFunction.Arn
              - !GetAtt SendSuspiciousActivityFunction.Arn
              - !GetAtt MarkActivityReportedFunction.Arn
          - Effect: "Allow"
            Action:
              - "xray:PutTraceSegments"
              - "xray:PutTelemetryRecords"
              - "xray:GetSamplingRules"
              - "xray:GetSamplingTargets"
            Resource: "*"
          - Effect: Allow
            Action:
              - "logs:CreateLogDelivery"
              - "logs:GetLogDelivery"
              - "logs:UpdateLogDelivery"
              - "logs:DeleteLogDelivery"
              - "logs:ListLogDeliveries"
              - "logs:PutLogEvents"
              - "logs:PutResourcePolicy"
              - "logs:DescribeResourcePolicies"
              - "logs:DescribeLogGroups"
            Resource: "*"
          - Effect: Allow
            Action:
              - "kms:Decrypt"
              - "kms:GenerateDataKey"
            Resource:
              - !GetAtt SecretsKmsKey.Arn
      Roles:
        - !Ref ReportSuspiciousActivityStepFunctionRole

  ReportSuspiciousActivityStepFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${Environment}-${AWS::StackName}-rsa-step"
      RetentionInDays: 30
      KmsKeyId: !GetAtt LoggingKmsKey.Arn

  ReportSuspiciousActivityStepFunctionCSLSSubscription:
    Condition: ExportLogsToSplunk
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: !Sub "{{resolve:ssm:/${Environment}/Platform/Logs/Subscription/CSLS/ARN}}"
      FilterPattern: ""
      LogGroupName: !Ref ReportSuspiciousActivityStepFunctionLogGroup

  ReportSuspiciousActivityStepFunctionExecutionFailureAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: ReportSuspiciousActivityStepFunctionExecutionFailure
      AlarmDescription: More than 1 report suspicious activity StepFunction workflows have failed in the last 5 minutes.
      Namespace: AWS/States
      Statistic: Sum
      MetricName: ExecutionFailed
      Dimensions:
        - Name: StateMachineArn
          Value: !Ref ReportSuspiciousActivityStepFunction
      ComparisonOperator: GreaterThanThreshold
      Threshold: 1
      EvaluationPeriods: 1
      Period: 300
      TreatMissingData: missing
      AlarmActions:
        - !Sub "{{resolve:ssm:/${AlertingStackName}/SNS/HighAlertNotificationTopic/ARN}}"

  ReportSuspiciousActivityStepFunctionExecutionRetryAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: ReportSuspiciousActivityStepFunctionExecutionRetry
      AlarmDescription: More than 10 attempts to retry failed report suspicious activity StepFunctions in the last 5 minutes.
      Namespace: AWS/States
      MetricName: RetryAttempts
      Dimensions:
        - Name: StateMachineArn
          Value: !Ref ReportSuspiciousActivityStepFunction
      ComparisonOperator: GreaterThanThreshold
      Statistic: Sum
      Period: 300
      Threshold: 10
      EvaluationPeriods: 1
      AlarmActions:
        - !Sub "{{resolve:ssm:/${AlertingStackName}/SNS/HighAlertNotificationTopic/ARN}}"

  ReportSuspiciousActivityStepFunctionSuccessRate:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName:
        !Join [
          "-",
          [
            !Ref AWS::StackName,
            !Ref Environment,
            ReportSuspiciousActivityStepFunctionSuccessRate,
          ],
        ]
      Metrics:
        - Id: errors
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Errors
              Dimensions:
                - Name: FunctionName
                  Value: !Ref ReportSuspiciousActivityStepFunction
            Period: 300
            Stat: Sum
          ReturnData: false
        - Id: invocations
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Invocations
              Dimensions:
                - Name: FunctionName
                  Value: !Ref ReportSuspiciousActivityStepFunction
            Period: 300
            Stat: Sum
          ReturnData: false
        - Id: successRate
          Expression: "1 - (errors / invocations)"
          Label: "Success Rate"
          ReturnData: true
      Threshold: 0.95
      ComparisonOperator: LessThanThreshold
      EvaluationPeriods: 1
      AlarmActions:
        - !Sub "{{resolve:ssm:/${AlertingStackName}/SNS/LowAlertNotificationTopic/ARN}}"

  #######################
  # Canary Deployment
  #######################

  CodeDeployServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - codedeploy.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSCodeDeployRoleForLambda
      PermissionsBoundary:
        !If [
          UsePermissionsBoundary,
          !Ref PermissionsBoundary,
          !Ref AWS::NoValue,
        ]

  #######################
  # Test permissons
  #######################

  WriteActivityLogFunctionTestPolicy:
    Condition: GrantTestPermissions
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref WriteActivityLogFunction
      Principal: !Ref TestRoleArn

  DeleteActivityLogFunctionTestPolicy:
    Condition: GrantTestPermissions
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref DeleteActivityLogFunction
      Principal: !Ref TestRoleArn

  #######################
  # Encryption
  #######################

  QueueKmsKey:
    Type: AWS::KMS::Key
    Properties:
      EnableKeyRotation: true
      KeyPolicy:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action: kms:*
            Resource:
              - "*"
          - Effect: Allow
            Principal:
              Service: cloudwatch.amazonaws.com
            Action: kms:*
            Resource:
              - "*"
          - Effect: Allow
            Principal:
              Service: sns.amazonaws.com
            Action:
              - kms:Decrypt
              - kms:GenerateDataKey
            Resource:
              - "*"

  QueueKmsKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub "alias/${AWS::StackName}/${Environment}/QueueKmsKey"
      TargetKeyId: !Ref QueueKmsKey

  DatabaseKmsKey:
    Type: AWS::KMS::Key
    Properties:
      EnableKeyRotation: true
      KeyPolicy:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action:
              - kms:*
            Resource:
              - "*"

  DatabaseKmsKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub "alias/${AWS::StackName}/${Environment}/DatabaseKmsKey"
      TargetKeyId: !Ref DatabaseKmsKey

  DatabaseKmsKeyIDParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Description: The ID of the Database KMS Key
      Name: !Sub "/${AWS::StackName}/KMS/DatabaseKmsKey/ID"
      Type: String
      Value: !Ref DatabaseKmsKey

  LambdaKMSKey:
    Type: AWS::KMS::Key
    Properties:
      EnableKeyRotation: true
      KeyPolicy:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action:
              - "kms:*"
            Resource:
              - "*"
          - Effect: "Allow"
            Principal:
              Service: "lambda.amazonaws.com"
            Action:
              - "kms:Decrypt"
            Resource: "*"

  LambdaKMSKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub "alias/${AWS::StackName}/${Environment}/LambdaKMSKey"
      TargetKeyId: !Ref LambdaKMSKey

  LoggingKmsKey:
    Type: AWS::KMS::Key
    Properties:
      EnableKeyRotation: true
      KeyPolicy:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action:
              - kms:*
            Resource: "*"
          - Effect: Allow
            Principal:
              Service: !Sub "logs.${AWS::Region}.amazonaws.com"
            Action:
              - "kms:Encrypt*"
              - "kms:Decrypt*"
              - "kms:ReEncrypt*"
              - "kms:GenerateDataKey*"
              - "kms:Describe*"
            Resource: "*"
            Condition:
              ArnLike:
                "kms:EncryptionContext:aws:logs:arn": !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*"

  LoggingKmsKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub "alias/${AWS::StackName}/${Environment}/LoggingKmsKey"
      TargetKeyId: !Ref LoggingKmsKey

  SnsKmsKey:
    Type: AWS::KMS::Key
    Properties:
      EnableKeyRotation: true
      KeyPolicy:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action: kms:*
            Resource:
              - "*"
          - !If
            - "IsNotDevelopmentOrDemo"
            - Effect: Allow
              Principal:
                AWS: !Join
                  - ""
                  - - "arn:aws:iam::"
                    - !FindInMap [
                        CredentialStoreAccounts,
                        !Ref Environment,
                        "AccountNumber",
                      ]
                    - ":root"
              Action: kms:Decrypt
              Resource:
                - "*"
            - !Ref AWS::NoValue
          - !If
            - "IsNotDevelopmentOrDemo"
            - Effect: Allow
              Principal:
                AWS: !Join
                  - ""
                  - - "arn:aws:iam::"
                    - !FindInMap [
                        AccountInterventionsService,
                        !Ref Environment,
                        "AccountNumber",
                      ]
                    - ":root"
              Action: kms:Decrypt
              Resource:
                - "*"
            - !Ref AWS::NoValue
          - !If
            - "IsNotDevelopmentOrDemo"
            - Effect: Allow
              Principal:
                AWS: !Join
                  - ""
                  - - "arn:aws:iam::"
                    - !FindInMap [
                        IPVCoreAccounts,
                        !Ref Environment,
                        "AccountNumber",
                      ]
                    - ":root"
              Action: kms:Decrypt
              Resource:
                - "*"
            - !Ref AWS::NoValue
          - !If
            - "UseExternalEvents"
            - Effect: Allow
              Principal:
                AWS: !Join
                  - ""
                  - - "arn:aws:iam::"
                    - !FindInMap [
                        OrchestrationAccounts,
                        !Ref Environment,
                        "AccountNumber",
                      ]
                    - ":root"
              Action:
                - kms:Decrypt
                - kms:Encrypt
                - kms:ReEncrypt*
                - kms:GenerateDataKey*
              Resource:
                - "*"
            - !Ref AWS::NoValue
          - Effect: Allow
            Principal:
              Service: cloudwatch.amazonaws.com
            Action: kms:*
            Resource:
              - "*"
          - Effect: Allow
            Principal:
              Service: sns.amazonaws.com
            Action: kms:*
            Resource:
              - "*"

  SnsKmsKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub "alias/${AWS::StackName}/${Environment}/SnsKmsKey"
      TargetKeyId: !Ref SnsKmsKey

  SnsKmsKeyIDParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Description: The ID of the SNS KMS Key
      Name: !Sub "/${AWS::StackName}/KMS/SnsKmsKey/ID"
      Type: String
      Value: !Ref SnsKmsKey

  WrapperKey:
    Type: AWS::KMS::Key
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      Description: A key used to encrypt the data key for envelope encryption
      EnableKeyRotation: true
      KeyPolicy:
        Version: "2012-10-17"
        Statement:
          - Sid: "Allow IAM to manage access to the key"
            Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action: "kms:*"
            Resource: "*"
      Tags:
        - Key: Product
          Value: GOV.UK Sign In
        - Key: System
          Value: Account Management Backend
        - Key: Owner
          Value: govuk-accounts-tech@digital.cabinet-office.gov.uk
        - Key: Environment
          Value: !Ref "Environment"
        - Key: Source
          Value: "https://github.com/alphagov/di-account-management-backend/blob/main/infrastructure/template.yaml"
        - Key: Name
          Value: !Sub "${AWS::StackName}-BackupWrapperKey"

  WrapperKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub "alias/${AWS::StackName}-WrapperKey"
      TargetKeyId: !GetAtt WrapperKey.Arn

  GeneratorKey:
    Type: AWS::KMS::Key
    Properties:
      Description: A generator key for generating a plaintext data key
      Enabled: true
      EnableKeyRotation: true
      KeyPolicy:
        Version: "2012-10-17"
        Statement:
          - Sid: "Allow root account access"
            Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action:
              - "kms:*"
            Resource: "*"
      Tags:
        - Key: Product
          Value: GOV.UK Sign In
        - Key: System
          Value: Account Management Backend
        - Key: Owner
          Value: govuk-accounts-tech@digital.cabinet-office.gov.uk
        - Key: Environment
          Value: !Ref "Environment"
        - Key: Source
          Value: "https://github.com/alphagov/di-account-management-backend/blob/main/infrastructure/template.yaml"
        - Key: Name
          Value: !Sub "${AWS::StackName}-GeneratorKey"

  GeneratorKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub "alias/${AWS::StackName}-GeneratorKey"
      TargetKeyId: !GetAtt GeneratorKey.Arn

  SecretsKmsKey:
    Type: AWS::KMS::Key
    Properties:
      Description: !Sub "KMS key used to protect secrets data in ${AWS::StackName}"
      Enabled: true
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action:
              - kms:*
            Resource: "*"
          - Effect: Allow
            Principal:
              Service: "secretsmanager.amazonaws.com"
            Action:
              - "kms:Encrypt*"
              - "kms:Decrypt*"
              - "kms:ReEncrypt*"
              - "kms:GenerateDataKey*"
              - "kms:Describe*"
            Resource: "*"
            Condition:
              ArnLike:
                aws:SourceArn: !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:/${AWS::StackName}/Config/Session/Secret"
      Tags:
        - Key: Product
          Value: !Ref ProductTagValue
        - Key: System
          Value: !Ref SystemTagValue
        - Key: Environment
          Value: !Ref Environment
        - Key: Name
          Value: !Sub "${AWS::StackName}-SecretsKmsKey"
        - Key: Owner
          Value: !Ref OwnerTagValue
        - Key: Source
          Value: !Ref SourceTagValue

  SecretsKmsKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub "alias/${AWS::StackName}-SecretsKmsKey"
      TargetKeyId: !GetAtt SecretsKmsKey.Arn

  StorageVerificationSecret:
    Type: AWS::SecretsManager::Secret
    DependsOn: SecretsKmsKeyAlias
    Properties:
      Name: !Sub "/${AWS::StackName}/Config/Storage/VerificationSecret"
      Description: Encryption context secret value
      GenerateSecretString:
        ExcludeLowercase: false
        ExcludeNumbers: false
        ExcludePunctuation: true
        ExcludeUppercase: false
        IncludeSpace: false
        RequireEachIncludedType: true
        PasswordLength: 32
      KmsKeyId: !Sub "alias/${AWS::StackName}-SecretsKmsKey"
      Tags:
        - Key: Product
          Value: GOV.UK Sign In
        - Key: System
          Value: Account Management Backend
        - Key: Owner
          Value: govuk-accounts-tech@digital.cabinet-office.gov.uk
        - Key: Environment
          Value: !Ref "Environment"
        - Key: Source
          Value: "https://github.com/alphagov/di-account-management-backend/blob/main/infrastructure/template.yaml"
        - Key: Name
          Value: !Sub "${AWS::StackName}-GeneratorKey"

  StorageSecretResourcePolicy:
    Type: AWS::SecretsManager::ResourcePolicy
    Properties:
      BlockPublicPolicy: false
      SecretId: !Ref StorageVerificationSecret
      ResourcePolicy:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: secretsmanager:GetSecretValue # pragma: allowlist secret
            Resource: !Ref StorageVerificationSecret
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: secretsmanager:GetSecretValue
            Resource: !Ref StorageVerificationSecret
            Condition:
              ArnLike:
                aws:SourceArn: !Sub arn:aws:iam::${AWS::AccountId}:role/${AccountManagementFrontendStackName}-TaskRole

  BackupWrappingKeyArnSSM:
    Type: AWS::SSM::Parameter
    Properties:
      Description: "The ARN of the Wrapping KMS key in the backup account manually set with the Backup Stack's WrappingKeyArn"
      Name: !Sub "/${AWS::StackName}/${Environment}/Backup/KMS/WrappingKey/ARN"
      Type: String
      Value: "please-set-me"

  VPCFlowLogsSplunkSubscription:
    Condition: ExportLogsToSplunk
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: !Sub "{{resolve:ssm:/${Environment}/Platform/Logs/Subscription/CSLS/ARN}}"
      FilterPattern: ""
      LogGroupName:
        Fn::ImportValue:
          Fn::Sub: "${VpcStackName}-FlowLogLogGroup"

  SuspiciousActivityTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: SuspiciousActivityTopic
      KmsMasterKeyId: !Ref SnsKmsKey
      TopicName: SuspiciousActivity

  SuspiciousActivityTopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      Topics:
        - !Ref SuspiciousActivityTopic
      PolicyDocument:
        Statement:
          - Sid: AllowSubscription
            Effect: Allow
            Principal:
              AWS: "*"
            Action: sns:Subscribe
            Resource:
              - !Ref SuspiciousActivityTopic
            Condition:
              StringEquals:
                aws:SourceAccount: !Ref AWS::AccountId
          - Sid: AllowPublish
            Effect: Allow
            Principal:
              AWS: "*"
            Action: sns:Publish
            Resource: !Ref SuspiciousActivityTopic
            Condition:
              ArnEquals:
                aws:SourceArn:
                  - !Sub "arn:aws:iam::${AWS::AccountId}:role/${AccountManagementFrontendStackName}-TaskRole"

  SuspiciousActivityArnParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Description: The ARN of the Suspicious Activity Topic
      Name: !Sub "/${AWS::StackName}/SNS/SuspiciousActivity/ARN"
      Type: String
      Value: !Ref SuspiciousActivityTopic

Outputs:
  GeneratorKey:
    Description: A generator key for generating a plaintext data key
    Value: !GetAtt GeneratorKey.Arn
    Export:
      Name: !Sub "${AWS::StackName}-GeneratorKey"
  WrappingKey:
    Description: A key used to encrypt the data key for envelope encryption
    Value: !GetAtt WrapperKey.Arn
    Export:
      Name: !Sub "${AWS::StackName}-WrappingKey"
